{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/guard/authorization.guard.ts","webpack:///src/app/material/material.module.ts","webpack:///src/app/model/articulo.ts","webpack:///src/app/model/cliente.ts","webpack:///src/app/model/credito.ts","webpack:///src/app/model/creditodetalle.ts","webpack:///src/app/model/dialogmensaje.ts","webpack:///src/app/model/jwtoken.ts","webpack:///src/app/model/movimiento.ts","webpack:///src/app/model/movimientodetalle.ts","webpack:///src/app/model/proveedor.ts","webpack:///src/app/model/tipocliente.ts","webpack:///src/app/model/tipocredito.ts","webpack:///src/app/model/tipomovimiento.ts","webpack:///src/app/model/tipopago.ts","webpack:///src/app/model/tipousuario.ts","webpack:///src/app/model/usuario.ts","webpack:///src/app/service/storage.service.ts","webpack:///src/app/service/web.service.ts","webpack:///src/app/shared/var.constants.ts","webpack:///src/app/view/articulo/articulo.component.html","webpack:///src/app/view/articulo/articulo.component.ts","webpack:///src/app/view/articulo/articulotecleo/articulotecleo.component.ts","webpack:///src/app/view/articulo/articulotecleo/articulotecleo.component.html","webpack:///src/app/view/cliente/cliente.component.html","webpack:///src/app/view/cliente/cliente.component.ts","webpack:///src/app/view/cliente/clientetecleo/clientetecleo.component.html","webpack:///src/app/view/cliente/clientetecleo/clientetecleo.component.ts","webpack:///src/app/view/credito/credito.component.html","webpack:///src/app/view/credito/credito.component.ts","webpack:///src/app/view/credito/creditoabono/creditoabono.component.html","webpack:///src/app/view/credito/creditoabono/creditoabono.component.ts","webpack:///src/app/view/credito/creditotecleo/creditotecleo.component.html","webpack:///src/app/view/credito/creditotecleo/creditotecleo.component.ts","webpack:///src/app/view/creditoconsulta/creditoconsulta.component.html","webpack:///src/app/view/creditoconsulta/creditoconsulta.component.ts","webpack:///src/app/view/dialogos/dialogconfirm/dialogconfirm.component.ts","webpack:///src/app/view/dialogos/dialogconfirm/dialogconfirm.component.html","webpack:///src/app/view/dialogos/dialogmensaje/dialogmensaje.component.ts","webpack:///src/app/view/dialogos/dialogmensaje/dialogmensaje.component.html","webpack:///src/app/view/login/login.component.ts","webpack:///src/app/view/login/login.component.html","webpack:///src/app/view/movimiento/movimiento.component.html","webpack:///src/app/view/movimiento/movimiento.component.ts","webpack:///src/app/view/movimiento/movimientodetalle/movimientodetalle.component.html","webpack:///src/app/view/movimiento/movimientodetalle/movimientodetalle.component.ts","webpack:///src/app/view/movimiento/movimientotecleo/movimientotecleo.component.html","webpack:///src/app/view/movimiento/movimientotecleo/movimientotecleo.component.ts","webpack:///src/app/view/principal/principal.component.ts","webpack:///src/app/view/principal/principal.component.html","webpack:///src/app/view/proveedor/proveedor.component.html","webpack:///src/app/view/proveedor/proveedor.component.ts","webpack:///src/app/view/proveedor/proveedortecleo/proveedortecleo.component.ts","webpack:///src/app/view/proveedor/proveedortecleo/proveedortecleo.component.html","webpack:///src/app/view/tipocliente/tipocliente.component.html","webpack:///src/app/view/tipocliente/tipocliente.component.ts","webpack:///src/app/view/tipocliente/tipoclientetecleo/tipoclientetecleo.component.ts","webpack:///src/app/view/tipocliente/tipoclientetecleo/tipoclientetecleo.component.html","webpack:///src/app/view/tipocredito/tipocredito.component.html","webpack:///src/app/view/tipocredito/tipocredito.component.ts","webpack:///src/app/view/tipocredito/tipocreditotecleo/tipocreditotecleo.component.ts","webpack:///src/app/view/tipocredito/tipocreditotecleo/tipocreditotecleo.component.html","webpack:///src/app/view/tipomovimiento/tipomovimiento.component.html","webpack:///src/app/view/tipomovimiento/tipomovimiento.component.ts","webpack:///src/app/view/tipomovimiento/tipomovimientotecleo/tipomovimientotecleo.component.ts","webpack:///src/app/view/tipomovimiento/tipomovimientotecleo/tipomovimientotecleo.component.html","webpack:///src/app/view/tipopago/tipopago.component.html","webpack:///src/app/view/tipopago/tipopago.component.ts","webpack:///src/app/view/tipopago/tipopagotecleo/tipopagotecleo.component.ts","webpack:///src/app/view/tipopago/tipopagotecleo/tipopagotecleo.component.html","webpack:///src/app/view/usuario/usuario.component.html","webpack:///src/app/view/usuario/usuario.component.ts","webpack:///src/app/view/usuario/usuariotecleo/usuariotecleo.component.html","webpack:///src/app/view/usuario/usuariotecleo/usuariotecleo.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","canActivate","AuthorizationGuard","children","component","MovimientoComponent","MovimientotecleoComponent","CreditoComponent","CreditotecleoComponent","CreditoconsultaComponent","TipocreditoComponent","TipocreditotecleoComponent","TipomovimientoComponent","TipomovimientotecleoComponent","UsuarioComponent","UsuariotecleoComponent","TipopagoComponent","TipopagotecleoComponent","TipoclienteComponent","TipoclientetecleoComponent","ArticuloComponent","ArticulotecleoComponent","ClienteComponent","ClientetecleoComponent","ProveedorComponent","ProveedortecleoComponent","PrincipalComponent","LoginComponent","redirectTo","pathMatch","AppRoutingModule","RouterModule","relativeLinkResolution","AppComponent","location","storageService","service","titlee","prepareExternalUrl","charAt","slice","AppModule","provide","LocationStrategy","useClass","HashLocationStrategy","BrowserModule","BrowserAnimationsModule","MaterialModule","HttpClientModule","ReactiveFormsModule","FormsModule","DialogmensajeComponent","DialogconfirmComponent","CreditoabonoComponent","MovimientodetalleComponent","router","isAuthenticated","navigate","CommonModule","MatTableModule","MatToolbarModule","MatPaginatorModule","MatButtonModule","MatIconModule","MatSortModule","MatFormFieldModule","MatInputModule","MatCardModule","MatSnackBarModule","MatSidenavModule","MatMenuModule","MatDividerModule","MatDialogModule","MatSelectModule","MatCheckboxModule","MatSlideToggleModule","MatTreeModule","MatListModule","MatStepperModule","MatExpansionModule","CdkAccordionModule","MatDatepickerModule","MatTooltipModule","MatNativeDateModule","MatGridListModule","MatProgressBarModule","Articulo","descripcion","valorventa","valorcompra","cantidad","Cliente","nombre","apellido","dpi","nit","telefono","correo","direccion","tipoclienteId","tipocliente","TipoCliente","Credito","fechainicial","fechafinal","valor","clienteId","cliente","tipocreditoId","tipocredito","TipoCredito","CreditoDetalle","fecha","tipomovimientoId","tipomovimiento","TipoMovimiento","creditoId","credito","DialogMensaje","titulo","mensaje","JWToken","token","Movimiento","tipopagoId","tipopago","TipoPago","proveedorId","proveedor","Proveedor","usuarioId","usuario","Usuario","MovimientoDetalle","articuloId","articulo","movimientoId","movimiento","empresa","monto","interes","clasificacion","signo","TipoUsuario","password","tipousuarioId","tipousuario","StorageService","currentSession","localStorageService","localStorage","loadSessionData","session","setItem","JSON","stringify","sessionStr","getItem","parse","removeItem","helper","JwtHelperService","getCurrentToken","isTokenExpired","getCurrentSession","decodeToken","removeCurrentSession","WebServices","http","url","URL_HOST","user","pass","get","reqHeader","HttpHeaders","headers","post","put","data","snackBar","rutaActiva","_datos","getUserToken","alert","buscar","getArticulo","subscribe","relativeTo","respuesta","confirm","deleteTipoPago","error","console","log","grabar","cls","obtenerDatos","snapshot","params","Id","open","duration","postArticulo","cerrar","putArticulo","getArticuloId","getCliente","deleteCliente","_datosTipoCliente","setFiltros","postCliente","putCliente","getClienteId","getTipoCliente","dialog","_datosCliente","getCredito","getCreditoClienteId","dialogConfig","MatDialogConfig","disableClose","autoFocus","dialogRef","afterClosed","confirmDialog","deleteCredito","_datosTipoMovimiento","creditosDetalle","totalAbonado","total","clsCredito","Date","toISOString","close","postCreditoDetalle","putCreditoDetalle","getCreditoDetalleCreditoId","forEach","d","Number","getTipoMovimientoCredito","MAT_DIALOG_DATA","clsDetalle","_datosTipoCredito","postCredito","detalle","putCredito","getCreditoId","getTipoCredito","imprimir","dialogo","aceptar","hide","getLogin","loginSession","correctLogin","setCurrentSession","ingresar","getMovimiento","getMovimientoClienteId","deleteMovimiento","_datosDetalle","clsMovimiento","getMovimientoDetalleMovimientoId","storage","clsCreditoDetalle","_valorTotal","_datosTipoPago","_datosTipoMovimientoCredito","_datosProveedor","_datosArticulo","_UsuarioCreacion","transferidos","ventaCredito","salida","push","index","findIndex","c","splice","validarCampos","postMovimiento","postMovimientoDetalle","length","getTipoPagoId","getTipoMovimientoId","getProveedor","getTipoPago","getTipoMovimientoMovimiento","onChangeMovimiento","onChangeTipoPago","onChangeArticulo","addItem","about","deleteProveedor","postProveedor","putProveedor","getProveedorId","deleteTipoCliente","postTipoCliente","putTipoCliente","getTipoClienteId","deleteTipoCredito","postTipoCredito","putTipoCredito","getTipoCreditoId","getTipoMovimiento","deleteTipoMovimiento","chkVenta","postTipoMovimiento","putTipoMovimiento","postTipoPago","putTipoPago","getUsuarios","deleteUsuario","_datosTipoUsuario","postUsuario","putUsuario","getUsuarioId","getTipoUsuario","environment","production","enableProdMode","platformBrowser","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthorizationGuard } from './guard/authorization.guard';\nimport { ArticuloComponent } from './view/articulo/articulo.component';\nimport { ArticulotecleoComponent } from './view/articulo/articulotecleo/articulotecleo.component';\nimport { ClienteComponent } from './view/cliente/cliente.component';\nimport { ClientetecleoComponent } from './view/cliente/clientetecleo/clientetecleo.component';\nimport { CreditoComponent } from './view/credito/credito.component';\nimport { CreditotecleoComponent } from './view/credito/creditotecleo/creditotecleo.component';\nimport { CreditoconsultaComponent } from './view/creditoconsulta/creditoconsulta.component';\nimport { LoginComponent } from './view/login/login.component';\nimport { MovimientoComponent } from './view/movimiento/movimiento.component';\nimport { MovimientotecleoComponent } from './view/movimiento/movimientotecleo/movimientotecleo.component';\nimport { PrincipalComponent } from './view/principal/principal.component';\nimport { ProveedorComponent } from './view/proveedor/proveedor.component';\nimport { ProveedortecleoComponent } from './view/proveedor/proveedortecleo/proveedortecleo.component';\nimport { TipoclienteComponent } from './view/tipocliente/tipocliente.component';\nimport { TipoclientetecleoComponent } from './view/tipocliente/tipoclientetecleo/tipoclientetecleo.component';\nimport { TipocreditoComponent } from './view/tipocredito/tipocredito.component';\nimport { TipocreditotecleoComponent } from './view/tipocredito/tipocreditotecleo/tipocreditotecleo.component';\nimport { TipomovimientoComponent } from './view/tipomovimiento/tipomovimiento.component';\nimport { TipomovimientotecleoComponent } from './view/tipomovimiento/tipomovimientotecleo/tipomovimientotecleo.component';\nimport { TipopagoComponent } from './view/tipopago/tipopago.component';\nimport { TipopagotecleoComponent } from './view/tipopago/tipopagotecleo/tipopagotecleo.component';\nimport { UsuarioComponent } from './view/usuario/usuario.component';\nimport { UsuariotecleoComponent } from './view/usuario/usuariotecleo/usuariotecleo.component';\n\n\nconst routes: Routes = [\n  {path: 'movimiento',canActivate: [AuthorizationGuard],children:[{path:'', component:MovimientoComponent},{path:'movimientotecleo/:Id',component:MovimientotecleoComponent}]},\n  {path: 'credito',canActivate: [AuthorizationGuard],children:[{path:'', component:CreditoComponent},{path:'creditotecleo/:Id',component:CreditotecleoComponent},{path:'creditoconsulta/:Id',component:CreditoconsultaComponent}]},\n  {path: 'tipocredito',canActivate: [AuthorizationGuard],children:[{path:'', component:TipocreditoComponent},{path:'tipocreditotecleo/:Id',component:TipocreditotecleoComponent}]},\n  {path: 'tipomovimiento',canActivate: [AuthorizationGuard],children:[{path:'', component:TipomovimientoComponent},{path:'tipomovimientotecleo/:Id',component:TipomovimientotecleoComponent}]},\n  {path: 'usuario',canActivate: [AuthorizationGuard],children:[{path:'', component:UsuarioComponent},{path:'usuariotecleo/:Id',component:UsuariotecleoComponent}]},\n  {path: 'tipopago',canActivate: [AuthorizationGuard],children:[{path:'', component:TipopagoComponent},{path:'tipopagotecleo/:Id',component:TipopagotecleoComponent}]},\n  {path: 'tipocliente',canActivate: [AuthorizationGuard],children:[{path:'', component:TipoclienteComponent},{path:'tipoclientetecleo/:Id',component:TipoclientetecleoComponent}]},\n  {path: 'articulo',canActivate: [AuthorizationGuard],children:[{path:'', component:ArticuloComponent},{path:'articulotecleo/:Id',component:ArticulotecleoComponent}]},\n  {path: 'cliente',canActivate: [AuthorizationGuard],children:[{path:'', component:ClienteComponent},{path:'clientetecleo/:Id',component:ClientetecleoComponent}]},\n  {path: 'proveedor',canActivate: [AuthorizationGuard],children:[{path:'', component:ProveedorComponent},{path:'proveedortecleo/:Id',component:ProveedortecleoComponent}]},\n  {path: 'principal',component:PrincipalComponent,canActivate: [AuthorizationGuard]},\n  {path: 'login',component:LoginComponent},\n  {path: '', redirectTo: '/principal', pathMatch: 'full' },\n  {path: '**', redirectTo: '/principal' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ relativeLinkResolution: 'legacy'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<mat-toolbar color=\"primary\" class=\"example-toolbar\">\n  <button\n    *ngIf=\"storageService.isAuthenticated()\"\n    mat-icon-button\n    (click)=\"sidenav.toggle()\"\n  >\n    <mat-icon *ngIf=\"!sidenav.opened\">menu</mat-icon>\n    <mat-icon *ngIf=\"sidenav.opened\">close</mat-icon>\n  </button>\n\n  <h1 class=\"example-app-name\">{{ getTitle() }}</h1>\n\n  <span class=\"example-spacer\"></span>\n\n  <button\n    *ngIf=\"storageService.isAuthenticated()\"\n    mat-icon-button\n    [matMenuTriggerFor]=\"menu\"\n  >\n    <mat-icon>more_vert</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item (click)=\"storageService.logout()\">\n      <mat-icon>exit_to_app</mat-icon>\n      <span>Cerrar Sesión</span>\n    </button>\n  </mat-menu>\n</mat-toolbar>\n\n<mat-sidenav-container class=\"example-sidenav-container\">\n  <mat-sidenav opened=\"false\" #sidenav style=\"width: 200px\">\n    <img\n      src=\"../../../assets/logo.png\"\n      alt=\"Logo Empresa\"\n      width=\"150\"\n      height=\"150\"\n      class=\"imgcenter\"\n    />\n    <div mat-subheader>Opciones</div>\n    <!--<mat-divider></mat-divider>-->\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/movimiento\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>arrow_right</mat-icon>\n      <span>Movimientos</span>\n    </button>\n\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/credito\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>arrow_right</mat-icon>\n      <span>Creditos</span>\n    </button>\n\n    <div mat-subheader>Maestros</div>\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/cliente\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>arrow_right</mat-icon>\n      <span>Clientes</span>\n    </button>\n\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/proveedor\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>arrow_right</mat-icon>\n      <span>Proveedor</span>\n    </button>\n\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/articulo\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>arrow_right</mat-icon>\n      <span>Articulos</span>\n    </button>\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/tipocliente\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>arrow_right</mat-icon>\n      <span>Tipo Cliente</span>\n    </button>\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/tipopago\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>arrow_right</mat-icon>\n      <span>Tipo Pago</span>\n    </button>\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/tipocredito\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>arrow_right</mat-icon>\n      <span>Tipo Credito</span>\n    </button>\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/tipomovimiento\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>arrow_right</mat-icon>\n      <span>Tipo Movimiento</span>\n    </button>\n    <button\n      mat-menu-item\n      (click)=\"sidenav.toggle()\"\n      routerLink=\"/usuario\"\n      style=\"cursor: pointer\"\n    >\n      <mat-icon>arrow_right</mat-icon>\n      <span>Usuarios</span>\n    </button>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <div class=\"container-dashboard\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { StorageService } from './service/storage.service';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { WebServices } from './service/web.service';\nimport { Usuario } from './model/usuario';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n\n  public location: Location;\n \n  constructor(location: Location,public storageService: StorageService, private service:WebServices){\n    this.location = location;\n \n  }\n\n  ngOnInit() {\n   \n  }\n\n\n  getTitle(){\n    var titlee = this.location.prepareExternalUrl(this.location.path());\n    if(titlee.charAt(0) == '#'){\n        titlee = titlee.slice( 2 );\n    }\n    titlee=\"MULTISERVICIOS S.A.\"\n    return titlee;\n  }\n\n \n}\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {  HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { LoginComponent } from './view/login/login.component';\nimport { PrincipalComponent } from './view/principal/principal.component';\nimport { ProveedorComponent } from './view/proveedor/proveedor.component';\nimport { ProveedortecleoComponent } from './view/proveedor/proveedortecleo/proveedortecleo.component';\nimport { TipoclienteComponent } from './view/tipocliente/tipocliente.component';\nimport { TipoclientetecleoComponent } from './view/tipocliente/tipoclientetecleo/tipoclientetecleo.component';\nimport { ClienteComponent } from './view/cliente/cliente.component';\nimport { ClientetecleoComponent } from './view/cliente/clientetecleo/clientetecleo.component';\nimport { TipopagoComponent } from './view/tipopago/tipopago.component';\nimport { TipopagotecleoComponent } from './view/tipopago/tipopagotecleo/tipopagotecleo.component';\nimport { DialogmensajeComponent } from './view/dialogos/dialogmensaje/dialogmensaje.component';\nimport { DialogconfirmComponent } from './view/dialogos/dialogconfirm/dialogconfirm.component';\nimport { ArticuloComponent } from './view/articulo/articulo.component';\nimport { ArticulotecleoComponent } from './view/articulo/articulotecleo/articulotecleo.component';\nimport { TipocreditoComponent } from './view/tipocredito/tipocredito.component';\nimport { TipocreditotecleoComponent } from './view/tipocredito/tipocreditotecleo/tipocreditotecleo.component';\nimport { TipomovimientoComponent } from './view/tipomovimiento/tipomovimiento.component';\nimport { TipomovimientotecleoComponent } from './view/tipomovimiento/tipomovimientotecleo/tipomovimientotecleo.component';\nimport { CreditoComponent } from './view/credito/credito.component';\nimport { CreditotecleoComponent } from './view/credito/creditotecleo/creditotecleo.component';\nimport { MovimientoComponent } from './view/movimiento/movimiento.component';\nimport { MovimientotecleoComponent } from './view/movimiento/movimientotecleo/movimientotecleo.component';\nimport { CreditoconsultaComponent } from './view/creditoconsulta/creditoconsulta.component';\nimport { CreditoabonoComponent } from './view/credito/creditoabono/creditoabono.component';\nimport { MovimientodetalleComponent } from './view/movimiento/movimientodetalle/movimientodetalle.component';\nimport { UsuarioComponent } from './view/usuario/usuario.component';\nimport { UsuariotecleoComponent } from './view/usuario/usuariotecleo/usuariotecleo.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    PrincipalComponent,\n    ProveedorComponent,\n    ProveedortecleoComponent,\n    TipoclienteComponent,\n    TipoclientetecleoComponent,\n    ClienteComponent,\n    ClientetecleoComponent,\n    TipopagoComponent,\n    TipopagotecleoComponent,\n    DialogmensajeComponent,\n    DialogconfirmComponent,\n    ArticuloComponent,\n    ArticulotecleoComponent,\n    TipocreditoComponent,\n    TipocreditotecleoComponent,\n    TipomovimientoComponent,\n    TipomovimientotecleoComponent,\n    CreditoComponent,\n    CreditotecleoComponent,\n    MovimientoComponent,\n    MovimientotecleoComponent,\n    CreditoconsultaComponent,\n    CreditoabonoComponent,\n    MovimientodetalleComponent,\n    UsuarioComponent,\n    UsuariotecleoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [ {provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { StorageService } from \"../service/storage.service\";\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class AuthorizationGuard implements CanActivate {\n  \n    constructor(private router:Router, private storageService: StorageService){}\n  \n     canActivate() {\n       if(! this.storageService.isAuthenticated()){\n          // not logged in so redirect to login page\n          this.router.navigate(['/login']);\n         return false;\n       }\n  \n\n       return true;\n     }\n    \n  }","import {CommonModule} from '@angular/common';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatListModule} from '@angular/material/list';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n    declarations: [],\n    imports: [\n      CommonModule,\n      MatTableModule,\n      MatToolbarModule,\n      MatPaginatorModule,\n      MatButtonModule,\n      MatIconModule,\n      MatSortModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatCardModule,\n      ReactiveFormsModule,\n      MatSnackBarModule,\n      MatSidenavModule,\n      MatMenuModule,\n      MatDividerModule,\n      MatDialogModule,\n      MatSelectModule,\n      MatCheckboxModule,\n      MatSlideToggleModule,\n      MatTreeModule,\n      MatListModule,\n      MatStepperModule,\n      MatExpansionModule,\n      CdkAccordionModule,\n      MatDatepickerModule,\n      MatTooltipModule,\n      MatNativeDateModule,\n      MatGridListModule,\n      MatProgressBarModule\n    ],\n    exports: [\n      MatTableModule,\n      MatToolbarModule,\n      MatPaginatorModule,\n      MatButtonModule,\n      MatIconModule,\n      MatSortModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatCardModule,\n      ReactiveFormsModule,\n      MatSnackBarModule,\n      MatSidenavModule,\n      MatMenuModule,\n      MatDividerModule,\n      MatDialogModule,\n      MatSelectModule,\n      MatCheckboxModule,\n      MatSlideToggleModule,\n      MatTreeModule,\n      MatListModule,\n      MatStepperModule,\n      MatExpansionModule,\n      CdkAccordionModule,\n      MatDatepickerModule,\n      MatTooltipModule,\n      MatNativeDateModule,\n      MatGridListModule,\n      MatProgressBarModule\n    ]\n  })\n  export class MaterialModule { }\n  ","export class Articulo{\n    public id:number=0;\n    public descripcion:string=\"\";\n    public valorventa:number=0.00;\n    public valorcompra:number=0.00;\n    public cantidad:number=0;\n}","import { TipoCliente } from \"./tipocliente\";\n\nexport class Cliente{\n    public id:number=0;\n    public nombre:string=\"\";\n    public apellido:string=\"\";\n    \n    public dpi:string=\"\";\n    public nit:string=\"\";\n    public telefono:string=\"\";\n    public correo:string=\"\";\n    public direccion:string=\"\";\n    public tipoclienteId:number=0;\n    public tipocliente:TipoCliente =new TipoCliente();\n}","import { Cliente } from \"./cliente\";\nimport { TipoCredito } from \"./tipocredito\";\n\nexport class Credito{\n    public id:number=0;\n    public fechainicial:string=\"\";\n    public fechafinal:string=\"\";\n    public valor:number=0.00;\n    public descripcion:string=\"\";\n    public clienteId:number=0;\n    public cliente:Cliente = new Cliente();\n    public tipocreditoId:number=0;\n    public tipocredito:TipoCredito = new TipoCredito();\n}","import { Credito } from \"./credito\";\nimport { TipoMovimiento } from \"./tipomovimiento\";\n\nexport class CreditoDetalle{\n    public id:number=0;\n    public fecha:string=\"\";\n    public valor:number=0.00;\n    public tipomovimientoId:number=0;\n    public tipomovimiento:TipoMovimiento = new TipoMovimiento();\n    public creditoId:number=0;\n    public credito:Credito = new Credito();\n}","export class DialogMensaje{\n    public titulo:string=\"\";\n    public mensaje:string=\"\";\n}","export class JWToken{\n    public token:string=\"\";\n}","import { Cliente } from \"./cliente\";\nimport { Proveedor } from \"./proveedor\";\nimport { TipoMovimiento } from \"./tipomovimiento\";\nimport { TipoPago } from \"./tipopago\";\nimport { Usuario } from \"./usuario\";\n\nexport class Movimiento{\n    public id:number=0;\n    public fecha:string=\"\";\n    public tipomovimientoId:number=0;\n    public tipomovimiento:TipoMovimiento= new TipoMovimiento();\n    public tipopagoId:number=0;\n    public tipopago:TipoPago=new TipoPago();\n    public clienteId:number=0;\n    public cliente:Cliente=new Cliente();\n    public proveedorId:number=0;\n    public proveedor:Proveedor = new Proveedor();\n    public usuarioId:number=0;\n    public usuario:Usuario = new Usuario();\n}","import { Articulo } from \"./articulo\";\nimport { Movimiento } from \"./movimiento\";\n\nexport class MovimientoDetalle{\n    public id:number=0;\n    public cantidad:number=0;\n    public valor:number=0;\n    public articuloId:number=0;\n    public articulo:Articulo = new Articulo();\n    public movimientoId:number=0;\n    public movimiento:Movimiento = new Movimiento();\n\n\n}","export class Proveedor{\n    public id:number=0;\n    public nombre:string=\"\";\n    public apellido:string=\"\";\n    \n    public dpi:string=\"\";\n    public nit:string=\"\";\n    public telefono:string=\"\";\n    public correo:string=\"\";\n    public direccion:string=\"\";\n    public empresa:string=\"\";\n}","export class TipoCliente{\n    public id:number=0;\n    public descripcion:string=\"\";\n    public monto:number=0.00;\n    public interes:number=0.00;\n    public clasificacion:string=\"\";\n}","export class TipoCredito{\n    public id:number=0;\n    public descripcion:string=\"\";\n}","export class TipoMovimiento{\n    public id:number=0;\n    public descripcion:string=\"\";\n    public signo:string=\"\";\n    public credito:boolean=false;\n}","export class TipoPago{\n    public id:number=0;\n    public descripcion:string=\"\";\n}","export class TipoUsuario{\n    public id:number=0;\n    public descripcion:string=\"\";\n}","import { TipoUsuario } from \"./tipousuario\";\n\nexport class Usuario{\n    public id:number=0;\n    public nombre:string=\"\";\n    public apellido:string=\"\";\n    public usuario:string=\"\";\n    public password:string=\"\";\n    public telefono:string=\"\";\n    public direccion:string=\"\";\n    public tipousuarioId:number=0;\n    public tipousuario:TipoUsuario=new TipoUsuario();\n}","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { JWToken } from \"../model/jwtoken\";\nimport { Usuario } from \"../model/usuario\";\nimport { UsuarioToken } from \"../model/usuariotoken\";\n\n\n\n\n@Injectable({\n    providedIn: 'root'\n  })\n  \n  export class StorageService {\n  \n    private localStorageService;\n    private currentSession =new JWToken ;\n  \n    constructor(private router: Router) {\n        this.localStorageService = localStorage;\n        this.currentSession = this.loadSessionData();\n     }\n  \n     setCurrentSession(session: JWToken): void {\n      this.currentSession = session;\n      this.localStorageService.setItem('token', JSON.stringify(session));\n    }\n  \n     loadSessionData(): JWToken{\n      var sessionStr = this.localStorageService.getItem('token');\n      return (sessionStr) ? <JWToken> JSON.parse(sessionStr) : new JWToken;\n    }\n  \n    getCurrentSession(): JWToken {\n      return this.currentSession;\n    }\n  \n    removeCurrentSession(): void {\n      this.localStorageService.removeItem('token');\n      this.currentSession = new JWToken;\n    }\n  \n    isAuthenticated(): boolean {\n      const helper = new JwtHelperService();\n      return (this.getCurrentToken() != null && !helper.isTokenExpired(this.getCurrentToken())) ? true : false;\n    };\n  \n  \n  \n    getCurrentToken(): string {\n      var session = this.getCurrentSession();\n      return (session && session.token) ? session.token : '';\n    };\n  \n    getUserToken():UsuarioToken{\n      const helper = new JwtHelperService();\n      var session  = this.getCurrentSession();\n      return helper.decodeToken(session.token)\n    }\n  \n    logout(): void{\n      this.removeCurrentSession();\n      this.router.navigate(['/login']);\n    }\n\n    /*\n    titelNavBar:string =\"\";\n    setTitelNavBar(titel:string){\n      this.titelNavBar = titel;\n    }\n    \n    getTitelNavBar():string{\n      return this.titelNavBar;\n    }\n    */\n\n  }","import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { Articulo } from \"../model/articulo\";\nimport { Cliente } from \"../model/cliente\";\nimport { Credito } from \"../model/credito\";\nimport { CreditoDetalle } from \"../model/creditodetalle\";\nimport { JWToken } from \"../model/jwtoken\";\nimport { Movimiento } from \"../model/movimiento\";\nimport { MovimientoDetalle } from \"../model/movimientodetalle\";\nimport { Proveedor } from \"../model/proveedor\";\nimport { TipoCliente } from \"../model/tipocliente\";\nimport { TipoCredito } from \"../model/tipocredito\";\nimport { TipoMovimiento } from \"../model/tipomovimiento\";\nimport { TipoPago } from \"../model/tipopago\";\nimport { TipoUsuario } from \"../model/tipousuario\";\nimport { Usuario } from \"../model/usuario\";\nimport { URL_HOST } from \"../shared/var.constants\";\nimport { StorageService } from \"./storage.service\";\n\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class WebServices {\n  \n\n    url = URL_HOST;\n\n    constructor(private http: HttpClient, private storageService:StorageService) { }\n\n    //#SERVICE  \"Usuario\"\n\n    getLogin(user:string,pass:string) : Observable<JWToken>{\n        return this.http.get<JWToken>(this.url+\"login/\"+user+\"/\"+pass);\n    }\n\n    getUsuarios() : Observable<Usuario[]>{\n      var reqHeader = new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n        'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n      })\n      return this.http.get<Usuario[]>(this.url+\"usuario\",{ headers: reqHeader });\n    }\n\n    getUsuarioId(id:number) : Observable<Usuario>{\n      var reqHeader = new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n        'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n      })\n      return this.http.get<Usuario>(this.url+\"usuario/\"+id,{ headers: reqHeader });\n    }\n\n    postUsuario(usuario:Usuario):Observable<Usuario>{\n      var reqHeader = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n      })\n\n        return this.http.post<Usuario>(this.url+\"usuario\",JSON.stringify(usuario),{headers: reqHeader})\n    }\n\n    putUsuario(usuario:Usuario) : Observable<Usuario>{\n      var reqHeader = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n      })\n        return this.http.put<Usuario>(this.url+\"usuario/\"+usuario.id,JSON.stringify(usuario),{headers: reqHeader})\n    }\n    deleteUsuario(usuario:Usuario) : Observable<Usuario>{\n      var reqHeader = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n      })\n        return this.http.delete<Usuario>(this.url+\"usuario/\"+usuario.id,{headers: reqHeader})\n    }\n\n    //#SERVICE \"Usuario\"\n\n\n      //#SERVICE  \"Credito\"\n      getCredito() : Observable<Credito[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Credito[]>(this.url+\"credito\",{ headers: reqHeader });\n      }\n\n      getCreditoId(id:number) : Observable<Credito>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Credito>(this.url+\"credito/\"+id,{ headers: reqHeader });\n      }\n\n      getCreditoClienteId(id:number) : Observable<Credito[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Credito[]>(this.url+\"credito/cliente/\"+id,{ headers: reqHeader });\n      }\n\n      getCreditoTipoCreditoId(id:number) : Observable<Credito[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Credito[]>(this.url+\"credito/tipocredito/\"+id,{ headers: reqHeader });\n      }\n   \n      postCredito(data:Credito):Observable<Credito>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n  \n          return this.http.post<Credito>(this.url+\"credito\",JSON.stringify(data),{headers: reqHeader})\n      }\n  \n      putCredito(data:Credito) : Observable<Credito>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.put<Credito>(this.url+\"credito/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n      }\n      deleteCredito(data:Credito) : Observable<Credito>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.delete<Credito>(this.url+\"credito/\"+data.id,{headers: reqHeader})\n      }\n      //#SERVICE \"Credito\"\n\n      //#SERVICE  \"CreditoDetalle\"\n      getCreditoDetalle() : Observable<CreditoDetalle[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<CreditoDetalle[]>(this.url+\"creditodetalle\",{ headers: reqHeader });\n      }\n\n      getCreditoDetalleId(id:number) : Observable<CreditoDetalle>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<CreditoDetalle>(this.url+\"creditodetalle/\"+id,{ headers: reqHeader });\n      }\n\n      getCreditoDetalleTipoMovimientoId(id:number) : Observable<CreditoDetalle[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<CreditoDetalle[]>(this.url+\"creditodetalle/tipomovimiento/\"+id,{ headers: reqHeader });\n      }\n\n      getCreditoDetalleCreditoId(id:number) : Observable<CreditoDetalle[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<CreditoDetalle[]>(this.url+\"creditodetalle/credito/\"+id,{ headers: reqHeader });\n      }\n   \n      postCreditoDetalle(data:CreditoDetalle):Observable<CreditoDetalle>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n  \n          return this.http.post<CreditoDetalle>(this.url+\"creditodetalle\",JSON.stringify(data),{headers: reqHeader})\n      }\n  \n      putCreditoDetalle(data:CreditoDetalle) : Observable<CreditoDetalle>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.put<CreditoDetalle>(this.url+\"creditodetalle/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n      }\n      deleteCreditoDetalle(data:CreditoDetalle) : Observable<CreditoDetalle>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.delete<CreditoDetalle>(this.url+\"creditodetalle/\"+data.id,{headers: reqHeader})\n      }\n      //#SERVICE \"CreditoDetalle\"\n\n      //#SERVICE \"Movimiento\"\n      \n      getMovimiento() : Observable<Movimiento[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Movimiento[]>(this.url+\"movimiento\",{ headers: reqHeader });\n      }\n\n      getMovimientoId(id:number) : Observable<Movimiento>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Movimiento>(this.url+\"movimiento/\"+id,{ headers: reqHeader });\n      }\n\n      getMovimientoClienteId(id:number) : Observable<Movimiento[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Movimiento[]>(this.url+\"movimiento/cliente/\"+id,{ headers: reqHeader });\n      }\n   \n      getMovimientoProveedorId(id:number) : Observable<Movimiento[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Movimiento[]>(this.url+\"movimiento/proveedor/\"+id,{ headers: reqHeader });\n      }\n\n      getMovimientoTipoMovimientoId(id:number) : Observable<Movimiento[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Movimiento[]>(this.url+\"movimiento/tipomovimiento/\"+id,{ headers: reqHeader });\n      }\n\n      getMovimientoTipoPagoId(id:number) : Observable<Movimiento[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Movimiento[]>(this.url+\"movimiento/tipopago/\"+id,{ headers: reqHeader });\n      }\n\n      postMovimiento(data:Movimiento):Observable<Movimiento>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n  \n          return this.http.post<Movimiento>(this.url+\"movimiento\",JSON.stringify(data),{headers: reqHeader})\n      }\n  \n      putMovimiento(data:Movimiento) : Observable<Movimiento>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.put<Movimiento>(this.url+\"movimiento/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n      }\n\n      deleteMovimiento(data:Movimiento) : Observable<Movimiento>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.delete<Movimiento>(this.url+\"movimiento/\"+data.id,{headers: reqHeader})\n      }\n\n      //#SERVICE \"movimeinto\"\n\n\n\n      //#SERVICE \"MovimientoDetalle\"\n      getMovimientoDetalle() : Observable<MovimientoDetalle[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<MovimientoDetalle[]>(this.url+\"movimientodetalle\",{ headers: reqHeader });\n      }\n\n      getMovimientoDetalleId(id:number) : Observable<MovimientoDetalle>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<MovimientoDetalle>(this.url+\"movimientodetalle/\"+id,{ headers: reqHeader });\n      }\n\n      getMovimientoDetalleMovimientoId(id:number) : Observable<MovimientoDetalle[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<MovimientoDetalle[]>(this.url+\"movimientodetalle/movimiento/\"+id,{ headers: reqHeader });\n      }\n   \n      postMovimientoDetalle(data:MovimientoDetalle):Observable<MovimientoDetalle>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n  \n          return this.http.post<MovimientoDetalle>(this.url+\"movimientodetalle\",JSON.stringify(data),{headers: reqHeader})\n      }\n  \n      putMovimientoDetalle(data:MovimientoDetalle) : Observable<MovimientoDetalle>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.put<MovimientoDetalle>(this.url+\"movimientodetalle/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n      }\n      deleteMovimientoDetalle(data:MovimientoDetalle) : Observable<MovimientoDetalle>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.delete<MovimientoDetalle>(this.url+\"movimientodetalle/\"+data.id,{headers: reqHeader})\n      }\n      //#SERVICE \"MovimientoDetalle\"\n\n      \n\n\n    //#SERVICE \"Maestros\"\n      \n\n      //#SERVICE  \"TipoUsuario\"\n      getTipoUsuario() : Observable<TipoUsuario[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<TipoUsuario[]>(this.url+\"tipousuario\",{ headers: reqHeader });\n      }\n\n      getTipoUsuarioId(id:number) : Observable<TipoUsuario>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<TipoUsuario>(this.url+\"tipousuario/\"+id,{ headers: reqHeader });\n      }\n   \n      postTipoUsuario(data:TipoUsuario):Observable<TipoUsuario>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n  \n          return this.http.post<TipoUsuario>(this.url+\"tipousuario\",JSON.stringify(data),{headers: reqHeader})\n      }\n  \n      putTipoUsuario(data:TipoUsuario) : Observable<TipoUsuario>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.put<TipoUsuario>(this.url+\"tipousuario/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n      }\n      deleteTipoUsuario(data:TipoUsuario) : Observable<TipoUsuario>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.delete<TipoUsuario>(this.url+\"tipousuario/\"+data.id,{headers: reqHeader})\n      }\n      //#SERVICE \"TipoUsuario\"\n\n\n      //#SERVICE  \"TipoCliente\"\n      getTipoCliente() : Observable<TipoCliente[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<TipoCliente[]>(this.url+\"tipocliente\",{ headers: reqHeader });\n      }\n\n      getTipoClienteId(id:number) : Observable<TipoCliente>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<TipoCliente>(this.url+\"tipocliente/\"+id,{ headers: reqHeader });\n      }\n   \n      postTipoCliente(data:TipoCliente):Observable<TipoCliente>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n  \n          return this.http.post<TipoCliente>(this.url+\"tipocliente\",JSON.stringify(data),{headers: reqHeader})\n      }\n  \n      putTipoCliente(data:TipoCliente) : Observable<TipoCliente>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.put<TipoCliente>(this.url+\"tipocliente/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n      }\n      deleteTipoCliente(data:TipoCliente) : Observable<TipoCliente>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.delete<TipoCliente>(this.url+\"tipocliente/\"+data.id,{headers: reqHeader})\n      }\n      //#SERVICE \"TipoCliente\"\n\n\n      //#SERVICE  \"TipoPago\"\n      getTipoPago() : Observable<TipoPago[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<TipoPago[]>(this.url+\"tipopago\",{ headers: reqHeader });\n      }\n\n      getTipoPagoId(id:number) : Observable<TipoPago>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<TipoPago>(this.url+\"tipopago/\"+id,{ headers: reqHeader });\n      }\n   \n      postTipoPago(data:TipoPago):Observable<TipoPago>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n  \n          return this.http.post<TipoPago>(this.url+\"tipopago\",JSON.stringify(data),{headers: reqHeader})\n      }\n  \n      putTipoPago(data:TipoPago) : Observable<TipoPago>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.put<TipoPago>(this.url+\"tipopago/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n      }\n      deleteTipoPago(data:TipoPago) : Observable<TipoPago>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.delete<TipoPago>(this.url+\"tipopago/\"+data.id,{headers: reqHeader})\n      }\n      //#SERVICE \"TipoPago\"\n\n\n      //#SERVICE  \"TipoCredito\"\n      getTipoCredito() : Observable<TipoCredito[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<TipoCredito[]>(this.url+\"tipocredito\",{ headers: reqHeader });\n      }\n\n      getTipoCreditoId(id:number) : Observable<TipoCredito>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<TipoCredito>(this.url+\"tipocredito/\"+id,{ headers: reqHeader });\n      }\n   \n      postTipoCredito(data:TipoCredito):Observable<TipoCredito>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n  \n          return this.http.post<TipoCredito>(this.url+\"tipocredito\",JSON.stringify(data),{headers: reqHeader})\n      }\n  \n      putTipoCredito(data:TipoCredito) : Observable<TipoCredito>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.put<TipoCredito>(this.url+\"tipocredito/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n      }\n      deleteTipoCredito(data:TipoCredito) : Observable<TipoCredito>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.delete<TipoCredito>(this.url+\"tipocredito/\"+data.id,{headers: reqHeader})\n      }\n      //#SERVICE \"TipoCredito\"\n\n\n      //#SERVICE  \"TipoMovimiento\"\n      getTipoMovimiento() : Observable<TipoMovimiento[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<TipoMovimiento[]>(this.url+\"tipomovimiento\",{ headers: reqHeader });\n      }\n\n      getTipoMovimientoMovimiento() : Observable<TipoMovimiento[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<TipoMovimiento[]>(this.url+\"tipomovimiento/movimiento\",{ headers: reqHeader });\n      }\n\n      getTipoMovimientoCredito() : Observable<TipoMovimiento[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<TipoMovimiento[]>(this.url+\"tipomovimiento/credito\",{ headers: reqHeader });\n      }\n\n      getTipoMovimientoId(id:number) : Observable<TipoMovimiento>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<TipoMovimiento>(this.url+\"tipomovimiento/\"+id,{ headers: reqHeader });\n      }\n   \n      postTipoMovimiento(data:TipoMovimiento):Observable<TipoMovimiento>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n  \n          return this.http.post<TipoMovimiento>(this.url+\"tipomovimiento\",JSON.stringify(data),{headers: reqHeader})\n      }\n  \n      putTipoMovimiento(data:TipoMovimiento) : Observable<TipoMovimiento>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.put<TipoMovimiento>(this.url+\"tipomovimiento/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n      }\n\n      deleteTipoMovimiento(data:TipoMovimiento) : Observable<TipoMovimiento>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.delete<TipoMovimiento>(this.url+\"tipomovimiento/\"+data.id,{headers: reqHeader})\n      }\n      //#SERVICE \"TipoMovimiento\"\n\n      //#SERVICE  \"Articulo\"\n      getArticulo() : Observable<Articulo[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Articulo[]>(this.url+\"articulo\",{ headers: reqHeader });\n      }\n\n      getArticuloId(id:number) : Observable<Articulo>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Articulo>(this.url+\"articulo/\"+id,{ headers: reqHeader });\n      }\n   \n      postArticulo(data:Articulo):Observable<Articulo>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n  \n          return this.http.post<Articulo>(this.url+\"articulo\",JSON.stringify(data),{headers: reqHeader})\n      }\n  \n      putArticulo(data:Articulo) : Observable<Articulo>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.put<Articulo>(this.url+\"articulo/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n      }\n      deleteArticulo(data:Articulo) : Observable<Articulo>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.delete<Articulo>(this.url+\"articulo/\"+data.id,{headers: reqHeader})\n      }\n      //#SERVICE \"Articulo\"\n\n      //#SERVICE  \"Cliente\"\n      getCliente() : Observable<Cliente[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Cliente[]>(this.url+\"cliente\",{ headers: reqHeader });\n      }\n\n      getClienteId(id:number) : Observable<Cliente>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Cliente>(this.url+\"cliente/\"+id,{ headers: reqHeader });\n      }\n   \n      postCliente(data:Cliente):Observable<Cliente>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n  \n          return this.http.post<Cliente>(this.url+\"cliente\",JSON.stringify(data),{headers: reqHeader})\n      }\n  \n      putCliente(data:Cliente) : Observable<Cliente>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.put<Cliente>(this.url+\"cliente/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n      }\n      deleteCliente(data:Cliente) : Observable<Cliente>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.delete<Cliente>(this.url+\"cliente/\"+data.id,{headers: reqHeader})\n      }\n      //#SERVICE \"Cliente\"\n\n\n\n      //#SERVICE  \"Proveedor\"\n      getProveedor() : Observable<Proveedor[]>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Proveedor[]>(this.url+\"proveedor\",{ headers: reqHeader });\n      }\n\n      getProveedorId(id:number) : Observable<Proveedor>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded;application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n        return this.http.get<Proveedor>(this.url+\"proveedor/\"+id,{ headers: reqHeader });\n      }\n   \n      postProveedor(data:Proveedor):Observable<Proveedor>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n  \n          return this.http.post<Proveedor>(this.url+\"proveedor\",JSON.stringify(data),{headers: reqHeader})\n      }\n  \n      putProveedor(data:Proveedor) : Observable<Proveedor>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.put<Proveedor>(this.url+\"proveedor/\"+data.id,JSON.stringify(data),{headers: reqHeader})\n      }\n      deleteProveedor(data:Proveedor) : Observable<Proveedor>{\n        var reqHeader = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.storageService.getCurrentToken()\n        })\n          return this.http.delete<Proveedor>(this.url+\"proveedor/\"+data.id,{headers: reqHeader})\n      }\n      //#SERVICE \"Proveedor\"\n\n    //#SERVICE \"Maestros\"\n\n\n  }\n\n","//export const URL_HOST= 'http://localhost:3000/api/';\nexport const URL_HOST= 'https://multiservicios-api.herokuapp.com/api/'","<section>\n  <div class=\"example-label\"><h2>Articulo Filtro</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n          <span>Agregar</span>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n          <span>Buscar</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div>\n    <mat-card class=\"example-card\" *ngFor=\"let element of _datos\">\n      <mat-card-header>\n        <mat-card-title>{{\n          \"Artiuclo: \" + element.descripcion\n        }}</mat-card-title>\n        <mat-card-subtitle></mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <div>\n          <table>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Cantidad:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.cantidad\n                }}</mat-label>\n              </td>\n            </tr>\n            <tr>\n              <td colspan=\"2\">\n                <mat-label style=\"align-text: center\">VALOR</mat-label>\n              </td>\n            </tr>\n\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Compra:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.valorcompra\n                }}</mat-label>\n              </td>\n            </tr>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Venta:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.valorventa\n                }}</mat-label>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n          <mat-icon>mode_edit</mat-icon>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Articulo } from 'src/app/model/articulo';\nimport { StorageService } from 'src/app/service/storage.service';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-articulo',\n  templateUrl: './articulo.component.html',\n  styleUrls: ['./articulo.component.css']\n})\nexport class ArticuloComponent implements OnInit {\n\n  public _datos:Articulo[]= [];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute,public storageService: StorageService) {\n    if(storageService.getUserToken().data[0].tipousuario.descripcion != \"Administrador\"){\n      alert(\"Usuario sin accesos\");\n      this.router.navigate(['/principal']);\n    }\n   }\n\n  ngOnInit(): void {\n    this.buscar();\n  }\n\n\n  buscar(){\n\n      this.service.getArticulo().subscribe(data => {\n        this._datos=data \n      });\n\n  }\n\n  grabar(){\n    this.router.navigate(['./articulotecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:Articulo){\n    this.router.navigate(['./articulotecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:Articulo){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteTipoPago(data).subscribe(()=>{\n        this.buscar()\n      } , error => {\n        console.log(error)\n      }\n      )\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Articulo } from 'src/app/model/articulo';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-articulotecleo',\n  templateUrl: './articulotecleo.component.html',\n  styleUrls: ['./articulotecleo.component.css']\n})\nexport class ArticulotecleoComponent implements OnInit {\n\n  public cls:Articulo=new Articulo();\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);  \n  }\n\n  cerrar() {\n    this.router.navigate(['/articulo'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.cls.descripcion == \"\"){\n      this.snackBar.open('El Campo descripcion es requerido', '', {\n        duration: 4000,\n      });      \n    }else if (this.cls.valorventa == 0){\n      this.snackBar.open('El Campo Valor de Venta es requerido', '', {\n        duration: 4000,\n      });\n    }else{\n      if(this.cls.id ==0){\n        this.service.postArticulo(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro grabado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }else{\n        this.service.putArticulo(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro modificado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getArticuloId(id).subscribe(data =>{\n        console.log(data)\n        this.cls=data;      \n      })\n    }\n    \n  }\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Articulo Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de articulo</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Descripcion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese la descricpion\"\n            [(ngModel)]=\"cls.descripcion\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Cantidad Inicial</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            placeholder=\"Ingrese la cantidad inicial\"\n            data-decimal=\"2\"\n            [(ngModel)]=\"cls.cantidad\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Valor de Compra</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            data-decimal=\"2\"\n            placeholder=\"Ingrese el valor de compra\"\n            [(ngModel)]=\"cls.valorcompra\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Valor de Venta</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            data-decimal=\"2\"\n            placeholder=\"Ingrese el valor de la venta\"\n            [(ngModel)]=\"cls.valorventa\"\n            requiere\n          />\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","<section>\n  <div class=\"example-label\"><h2>Cliente Filtro</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n          <span>Agregar</span>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n          <span>Buscar</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div>\n    <mat-card class=\"example-card\" *ngFor=\"let element of _datos\">\n      <mat-card-header>\n        <mat-card-title>{{\n          \"Cliente: \" + element.nombre + element.apellido\n        }}</mat-card-title>\n        <mat-card-subtitle>{{ \"DPI: \" + element.dpi }}</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <div>\n          <table>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">NIT:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.nit\n                }}</mat-label>\n              </td>\n            </tr>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Telefono:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.telefono\n                }}</mat-label>\n              </td>\n            </tr>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Email:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.correo\n                }}</mat-label>\n              </td>\n            </tr>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Direccion:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.direccion\n                }}</mat-label>\n              </td>\n            </tr>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Tipo Cliente:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.tipocliente.clasificacion\n                }}</mat-label>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n          <mat-icon>mode_edit</mat-icon>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cliente } from 'src/app/model/cliente';\nimport { StorageService } from 'src/app/service/storage.service';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styleUrls: ['./cliente.component.css']\n})\nexport class ClienteComponent implements OnInit {\n\n  public _datos:Cliente[]= [];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute,public storageService: StorageService) { \n\n    if(storageService.getUserToken().data[0].tipousuario.descripcion != \"Administrador\"){\n      alert(\"Usuario sin accesos\");\n      this.router.navigate(['/principal']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.buscar();\n  }\n\n\n  buscar(){\n\n      this.service.getCliente().subscribe(data => {\n        this._datos=data \n      });\n\n  }\n\n  grabar(){\n    this.router.navigate(['./clientetecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:Cliente){\n    this.router.navigate(['./clientetecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:Cliente){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteCliente(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Cliente Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de clientes</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Nombre</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese su Nombre\"\n            [(ngModel)]=\"cls.nombre\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Apellido</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese su Apellido\"\n            [(ngModel)]=\"cls.apellido\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>DPI</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            placeholder=\"Ingrese el DPI\"\n            [(ngModel)]=\"cls.dpi\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>NIT</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            placeholder=\"Ingrese el NIT\"\n            [(ngModel)]=\"cls.nit\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Telefono</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            placeholder=\"Ingrese su Telefono\"\n            [(ngModel)]=\"cls.telefono\"\n            requiere\n          />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Direccion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese su Direccion\"\n            [(ngModel)]=\"cls.direccion\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Correo Electronico</mat-label>\n          <input\n            matInput\n            type=\"email\"\n            placeholder=\"Ingrese su Correo Electronico\"\n            [(ngModel)]=\"cls.correo\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Seleccione Tipo de Cliente</mat-label>\n          <mat-select [(ngModel)]=\"cls.tipoclienteId\" required>\n            <mat-option *ngFor=\"let c of _datosTipoCliente\" [value]=\"c.id\">\n              {{ c.clasificacion }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cliente } from 'src/app/model/cliente';\nimport { TipoCliente } from 'src/app/model/tipocliente';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-clientetecleo',\n  templateUrl: './clientetecleo.component.html',\n  styleUrls: ['./clientetecleo.component.css']\n})\nexport class ClientetecleoComponent implements OnInit {\n\n\n  public cls:Cliente=new Cliente();\n  public _datosTipoCliente:TipoCliente[]= [];\n  \n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.setFiltros();\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);  \n  }\n\n  cerrar() {\n    this.router.navigate(['/cliente'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.cls.nombre == \"\"){\n      this.snackBar.open('El Campo nombre es requerido', '', {\n        duration: 4000,\n      });      \n    }else if (this.cls.dpi == \"\"){\n      this.snackBar.open('El Campo dpi es requerido', '', {\n        duration: 4000,\n      });\n    }else if (this.cls.nit == \"\"){\n      this.snackBar.open('El Campo nit es requerido', '', {\n        duration: 4000,\n      });\n    }\n    else if (this.cls.telefono == \"\"){\n      this.snackBar.open('El Campo telefono es requerido', '', {\n        duration: 4000,\n      });\n    }else{\n      \n  \n      if(this.cls.id ==0){\n  \n        this.service.postCliente(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro grabado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }else{\n        this.service.putCliente(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro modificado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getClienteId(id).subscribe(data =>{\n        this.cls=data;      \n      })\n    }\n    \n  }\n\n  setFiltros(){\n    this.service.getTipoCliente().subscribe(data=>{\n      this._datosTipoCliente = data;\n    })\n  }\n\n}\n","<section>\n  <div class=\"example-label\"><h2>Credito Filtro</h2></div>\n  <div>\n    <mat-card class=\"example-card\">\n      <mat-card-content>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Seleccione Cliente</mat-label>\n          <mat-select [(ngModel)]=\"clienteId\">\n            <mat-option [value]=\"0\">Todos</mat-option>\n            <mat-option *ngFor=\"let c of _datosCliente\" [value]=\"c.id\">\n              {{ c.nombre + \" \" + c.apellido }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n          <span>Agregar</span>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n          <span>Buscar</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div>\n    <mat-card class=\"example-card\" *ngFor=\"let element of _datos\">\n      <mat-card-header>\n        <mat-card-title>{{\n          \"Cliente: \" + element.cliente.nombre + element.cliente.apellido\n        }}</mat-card-title>\n        <mat-card-subtitle>{{\n          \"DPI: \" + element.cliente.dpi\n        }}</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content class=\"mat-card-content-body\">\n        <table>\n          <tr class=\"th\" colspan=\"2\">\n            <td>\n              <mat-label style=\"align-text: center\">Descripcion</mat-label>\n            </td>\n          </tr>\n          <tr class=\"th\" colspan=\"2\">\n            <td>\n              <mat-label style=\"align-text: center\">{{\n                element.descripcion\n              }}</mat-label>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <mat-label style=\"align-text: center\">Fecha Inicial:</mat-label>\n            </td>\n            <td>\n              <mat-label style=\"align-text: center\">Fecha Final:</mat-label>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <mat-label style=\"align-text: center\">{{\n                element.fechainicial | date: \"dd/MM/yyyy\"\n              }}</mat-label>\n            </td>\n            <td>\n              <mat-label style=\"align-text: center\">{{\n                element.fechafinal | date: \"dd/MM/yyyy\"\n              }}</mat-label>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <mat-label style=\"align-text: center\">Monto:</mat-label>\n            </td>\n            <td>\n              <mat-label style=\"align-text: center\">{{\n                element.valor\n              }}</mat-label>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <mat-label style=\"align-text: center\">Tipo de Credito:</mat-label>\n            </td>\n            <td>\n              <mat-label style=\"align-text: center\">{{\n                element.tipocredito.descripcion\n              }}</mat-label>\n            </td>\n          </tr>\n        </table>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button\n          mat-raised-button\n          color=\"primary\"\n          (click)=\"estadoCuenta(element)\"\n        >\n          <mat-icon>account_balance</mat-icon>\n          <span>Estado de cuenta</span>\n        </button>\n\n        <button mat-raised-button color=\"primary\" (click)=\"abonar(element)\">\n          <mat-icon>payments</mat-icon>\n          <span>Abonar</span>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cliente } from 'src/app/model/cliente';\nimport { Credito } from 'src/app/model/credito';\nimport { WebServices } from 'src/app/service/web.service';\nimport { CreditoabonoComponent } from './creditoabono/creditoabono.component';\n\n@Component({\n  selector: 'app-credito',\n  templateUrl: './credito.component.html',\n  styleUrls: ['./credito.component.css']\n})\nexport class CreditoComponent implements OnInit {\n\n  public _datos:Credito[]= [];\n  clienteId:number=0;\n  public _datosCliente:Cliente[]= [];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private dialog: MatDialog,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.setFiltros();\n    this.buscar();\n  }\n\n\n  buscar(){\n    \n    if(this.clienteId == 0){\n      this.service.getCredito().subscribe(data => {\n        this._datos=data \n      });\n    }else{\n      this.service.getCreditoClienteId(this.clienteId).subscribe(data => {\n        this._datos=data \n      });\n    }\n  \n  }\n\n  grabar(){\n    this.router.navigate(['./creditotecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:Credito){\n    this.router.navigate(['./creditotecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  abonar(data:Credito){\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = data;\n   \n    const dialogRef = this.dialog.open(CreditoabonoComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(\n      (confirmDialog: boolean) => {\n        if(confirmDialog){\n          this.snackBar.open('Registro creada correctamente', 'Aceptar', {\n            duration: 2000,\n          });\n          this.buscar()\n        }\n      }\n    );\n  }\n\n  eliminar(data:Credito){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {      \n      this.service.deleteCredito(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n\n  estadoCuenta(data:Credito){\n    this.router.navigate(['./creditoconsulta',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  setFiltros(){\n    this.service.getCliente().subscribe(data=>{\n      this._datosCliente = data;\n    })    \n  }\n\n}\n","<h1 mat-dialog-title>Abono a credito</h1>\n<div mat-dialog-content>\n  <table>\n    <tr>\n      <td>\n        <mat-label style=\"align-text: center\">{{\n          \"Cliente: \" + clsCredito.cliente.nombre + clsCredito.cliente.apellido\n        }}</mat-label>\n      </td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>\n        <mat-label style=\"align-text: center\">\n          {{ \"DPI: \" + clsCredito.cliente.dpi }}</mat-label\n        >\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <mat-label style=\"align-text: center\">{{\n          \"Monto Credito: \" + clsCredito.valor\n        }}</mat-label>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <mat-label style=\"align-text: center\">{{\n          \"Total Abonado: \" + totalAbonado\n        }}</mat-label>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <mat-label style=\"align-text: center\">{{\n          \"Credito Pendiente: \" + total\n        }}</mat-label>\n      </td>\n    </tr>\n  </table>\n\n  <br />\n  <mat-form-field class=\"example-form-field\" appearance=\"outline\">\n    <mat-label>Fecha</mat-label>\n    <input\n      matInput\n      [matDatepicker]=\"pickerInicial\"\n      placeholder=\"Ingrese la fecha\"\n      [(ngModel)]=\"cls.fecha\"\n      requiere\n    />\n    <mat-datepicker-toggle\n      matSuffix\n      [for]=\"pickerInicial\"\n    ></mat-datepicker-toggle>\n    <mat-datepicker #pickerInicial></mat-datepicker>\n  </mat-form-field>\n\n  <mat-form-field class=\"example-form-field\" appearance=\"outline\">\n    <mat-label>Seleccione Tipo de Credito</mat-label>\n    <mat-select [(ngModel)]=\"cls.tipomovimientoId\" required>\n      <mat-option *ngFor=\"let c of _datosTipoMovimiento\" [value]=\"c.id\">\n        {{ c.descripcion }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field class=\"example-form-field\" appearance=\"outline\">\n    <mat-label>Monto</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      data-decimal=\"2\"\n      placeholder=\"Ingrese el Monto del credito\"\n      [(ngModel)]=\"cls.valor\"\n      requiere\n    />\n  </mat-form-field>\n</div>\n<div mat-dialog-actions align=\"end\">\n  <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">Cerrar</button>\n  <button\n    mat-raised-button\n    color=\"primary\"\n    *ngIf=\"grabarVisible()\"\n    (click)=\"grabar()\"\n  >\n    Grabar\n  </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef,MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Credito } from 'src/app/model/credito';\nimport { CreditoDetalle } from 'src/app/model/creditodetalle';\nimport { TipoMovimiento } from 'src/app/model/tipomovimiento';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-creditoabono',\n  templateUrl: './creditoabono.component.html',\n  styleUrls: ['./creditoabono.component.css']\n})\nexport class CreditoabonoComponent implements OnInit {\n\n  \n  public cls:CreditoDetalle=new CreditoDetalle();\n  public _datosTipoMovimiento:TipoMovimiento[]= [];\n  public clsCredito:Credito;\n  public creditosDetalle:CreditoDetalle[]= [];\n  public totalAbonado:number=0;\n  public total:number=0;\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private dialogRef: MatDialogRef<CreditoabonoComponent>,@Inject(MAT_DIALOG_DATA) public data: Credito) {\n    this.clsCredito = data;\n   }\n\n  ngOnInit(): void {\n    this.setFiltros();\n    this.obtenerDatos(this.clsCredito.id);  \n    this.cls.fecha = new Date().toISOString();\n  }\n\n  cerrar() {\n    this.dialogRef.close(false);\n  }\n\n  grabar(){\n\n\n    if(this.cls.fecha == \"\"){\n      this.snackBar.open('El Campo Fecha  es requerido', '', {\n        duration: 4000,\n      });      \n    }else if (this.cls.tipomovimientoId == 0){\n      this.snackBar.open('El Campo Tipo Movimiento  es requerido', '', {\n        duration: 4000,\n      });\n    }else if (this.cls.valor == 0){\n      this.snackBar.open('El Campo Valor es requerido', '', {\n        duration: 4000,\n      });\n    }else{\n      this.cls.credito = this.clsCredito;\n      this.cls.creditoId = this.clsCredito.id;\n      if(this.cls.id ==0){\n        this.service.postCreditoDetalle(this.cls).subscribe(data =>{\n          this.dialogRef.close(true);\n        })\n      }else{\n        this.service.putCreditoDetalle(this.cls).subscribe(data =>{\n          this.dialogRef.close(true);\n        })\n      }\n    }\n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n\n      this.service.getCreditoDetalleCreditoId(id).subscribe(data =>{\n        this.creditosDetalle=data;    \n        data.forEach(d =>{\n          if(d.tipomovimiento.signo =='-1'){\n            this.total =  this.total - d.valor\n          }else{\n            this.total =  Number(this.total) + Number(d.valor)\n          }\n        }) \n        this.total = this.total * -1\n        this.totalAbonado =   this.clsCredito.valor - this.total\n      })\n\n\n    }\n  }\n\n  setFiltros(){\n    this.service.getTipoMovimientoCredito().subscribe(data=>{\n      this._datosTipoMovimiento = data;\n    })\n  }\n\n  grabarVisible(){\n    if(this.total == 0 ){\n      return false;\n    }else{\n      return true;\n    }\n\n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Credito Tecleo</mat-card-title>\n      <mat-card-subtitle>ingreso de credito</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <div>\n        <mat-form-field\n          class=\"example-form-field\"\n          appearance=\"outline\"\n          [style.width.%]=\"100\"\n        >\n          <mat-label>Fecha Inicial</mat-label>\n          <input\n            matInput\n            [matDatepicker]=\"pickerInicial\"\n            placeholder=\"Ingrese la fecha inicial\"\n            [(ngModel)]=\"cls.fechainicial\"\n            requiere\n          />\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"pickerInicial\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #pickerInicial></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field\n          class=\"example-form-field\"\n          appearance=\"outline\"\n          [style.width.%]=\"100\"\n        >\n          <mat-label>Fecha Final</mat-label>\n          <input\n            matInput\n            [matDatepicker]=\"pickerFinal\"\n            placeholder=\"Ingrese la fecha final\"\n            [(ngModel)]=\"cls.fechafinal\"\n            requiere\n          />\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"pickerFinal\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #pickerFinal></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Seleccione Cliente</mat-label>\n          <mat-select [(ngModel)]=\"cls.clienteId\" required>\n            <mat-option *ngFor=\"let c of _datosCliente\" [value]=\"c.id\">\n              {{ c.nombre + \" \" + c.apellido }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Seleccione Tipo de Credito</mat-label>\n          <mat-select [(ngModel)]=\"cls.tipocreditoId\" required>\n            <mat-option *ngFor=\"let c of _datosTipoCredito\" [value]=\"c.id\">\n              {{ c.descripcion }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Seleccione Tipo de Movimiento Credito</mat-label>\n          <mat-select [(ngModel)]=\"clsDetalle.tipomovimientoId\" required>\n            <mat-option *ngFor=\"let c of _datosTipoMovimiento\" [value]=\"c.id\">\n              {{ c.descripcion }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Monto</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            data-decimal=\"2\"\n            placeholder=\"Ingrese el Monto del credito\"\n            [(ngModel)]=\"cls.valor\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Descripcion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese una descripcion\"\n            [(ngModel)]=\"cls.descripcion\"\n            requiere\n          />\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cliente } from 'src/app/model/cliente';\nimport { Credito } from 'src/app/model/credito';\nimport { CreditoDetalle } from 'src/app/model/creditodetalle';\nimport { TipoCredito } from 'src/app/model/tipocredito';\nimport { TipoMovimiento } from 'src/app/model/tipomovimiento';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-creditotecleo',\n  templateUrl: './creditotecleo.component.html',\n  styleUrls: ['./creditotecleo.component.css']\n})\nexport class CreditotecleoComponent implements OnInit {\n\n  public cls:Credito=new Credito();\n  public clsDetalle:CreditoDetalle=new CreditoDetalle();\n  public _datosCliente:Cliente[]= [];\n  public _datosTipoCredito:TipoCredito[]= [];\n  public _datosTipoMovimiento:TipoMovimiento[]= [];\n\n  \n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { \n    \n  }\n\n  ngOnInit(): void {\n    this.setFiltros();\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);  \n    if(this.cls.fechainicial ==\"\"){\n      this.cls.fechainicial = new Date().toISOString();\n    }\n  }\n\n  cerrar() {\n    this.router.navigate(['/credito'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.cls.fechainicial == \"\"){\n      this.snackBar.open('El Campo Fecha Inicial es requerido', '', {\n        duration: 4000,\n      });      \n    }else if (this.cls.fechafinal == \"\"){\n      this.snackBar.open('El Campo Fecha Final es requerido', '', {\n        duration: 4000,\n      });\n    }else if (this.cls.valor == 0){\n      this.snackBar.open('El Campo Valor es requerido', '', {\n        duration: 4000,\n      });\n    }else if (this.cls.clienteId == 0){\n      this.snackBar.open('El Campo Cliente es requerido', '', {\n        duration: 4000,\n      });\n    }\n    else if (this.cls.tipocreditoId == 0){\n      this.snackBar.open('El Campo Tipo Credito es requerido', '', {\n        duration: 4000,\n      });\n    }else{\n \n\n      if(this.cls.id ==0){\n        this.service.postCredito(this.cls).subscribe(data =>{\n          this.clsDetalle.fecha = this.cls.fechainicial\n          this.clsDetalle.creditoId = data.id\n          this.clsDetalle.valor = this.cls.valor\n          this.service.postCreditoDetalle(this.clsDetalle).subscribe(detalle =>{\n            this.snackBar.open('Registro grabado', '', {\n              duration: 4000,\n            });\n            this.cerrar();\n\n          })\n        })\n      }else{\n        this.service.putCredito(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro modificado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getCreditoId(id).subscribe(data =>{\n        this.cls=data;      \n      })\n    }\n    \n  }\n\n  setFiltros(){\n    this.service.getCliente().subscribe(data=>{\n      this._datosCliente = data;\n    })\n    this.service.getTipoCredito().subscribe(data=>{\n      this._datosTipoCredito = data;\n    })\n    this.service.getTipoMovimientoCredito().subscribe(data=>{\n      this._datosTipoMovimiento = data;\n    })\n  }\n\n}\n","<mat-card class=\"example-card\">\n  <mat-card-title class=\"mat-card-content-body\"\n    >Estado de Cuenta</mat-card-title\n  >\n  <mat-card-content class=\"mat-card-content-body\">\n    <table id=\"customers\">\n      <tr>\n        <td class=\"th\" colspan=\"2\">Cliente</td>\n      </tr>\n      <tr>\n        <td class=\"th\" colspan=\"2\">\n          <mat-label style=\"align-text: center\">{{\n            clsCredito.cliente.nombre + \" \" + clsCredito.cliente.apellido\n          }}</mat-label>\n        </td>\n      </tr>\n      <tr>\n        <td>DPI</td>\n        <td>\n          <mat-label style=\"align-text: center\">\n            {{ clsCredito.cliente.dpi }}</mat-label\n          >\n        </td>\n      </tr>\n      <tr>\n        <td>Monto Credito</td>\n        <td>\n          <mat-label style=\"align-text: center\">{{\n            clsCredito.valor | currency: \"Q\"\n          }}</mat-label>\n        </td>\n      </tr>\n      <tr>\n        <td>Total Abonado</td>\n        <td>\n          <mat-label style=\"align-text: center\">{{\n            totalAbonado | currency: \"Q\"\n          }}</mat-label>\n        </td>\n      </tr>\n      <tr>\n        <td>Credito Pendiente</td>\n        <td>\n          <mat-label style=\"align-text: center\">{{\n            total | currency: \"Q\"\n          }}</mat-label>\n        </td>\n      </tr>\n    </table>\n\n    <br />\n  </mat-card-content>\n  <mat-card-actions align=\"end\">\n    <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n      <mat-icon>close</mat-icon>\n      <span>Salir</span>\n    </button>\n\n    <button mat-raised-button color=\"primary\" (click)=\"imprimir()\">\n      <mat-icon>print</mat-icon>\n      <span>Imprimir</span>\n    </button>\n  </mat-card-actions>\n</mat-card>\n\n<mat-card class=\"example-card\">\n  <mat-card-title></mat-card-title>\n  <mat-card-content class=\"mat-card-content-body\">\n    <table id=\"customers\">\n      <tr>\n        <td class=\"th\">Tipo de Movimiento</td>\n        <td class=\"th\">Fecha</td>\n        <td class=\"th\">Valor</td>\n      </tr>\n      <tr *ngFor=\"let element of clsDetalle\">\n        <td>\n          <mat-label style=\"align-text: center\">{{\n            element.tipomovimiento.descripcion\n          }}</mat-label>\n        </td>\n        <td>\n          <mat-label style=\"align-text: center\">{{\n            element.fecha | date: \"dd/MM/yyyy\"\n          }}</mat-label>\n        </td>\n        <td>\n          <mat-label style=\"align-text: center\">{{\n            element.valor | currency: \"Q\"\n          }}</mat-label>\n        </td>\n      </tr>\n    </table>\n\n    <br />\n  </mat-card-content>\n  <mat-card-actions align=\"end\"> </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Credito } from 'src/app/model/credito';\nimport { CreditoDetalle } from 'src/app/model/creditodetalle';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-creditoconsulta',\n  templateUrl: './creditoconsulta.component.html',\n  styleUrls: ['./creditoconsulta.component.css']\n})\nexport class CreditoconsultaComponent implements OnInit {\n\n\n  public clsCredito:Credito=new Credito();\n  public clsDetalle: CreditoDetalle []=[];\n\n  public totalAbonado:number=0;\n  public total:number=0;\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { \n    \n  }\n\n  ngOnInit(): void {\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);  \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getCreditoId(id).subscribe(data =>{\n        this.clsCredito=data;   \n        \n        \n      this.service.getCreditoDetalleCreditoId(id).subscribe(data =>{\n        console.log(data)\n        this.clsDetalle = data;\n        data.forEach(d =>{\n          if(d.tipomovimiento.signo =='-1'){\n            this.total =  this.total - d.valor\n          }else{\n            this.total =  Number(this.total) + Number(d.valor)\n          }\n        }) \n        this.total = this.total * -1\n        this.totalAbonado =   this.clsCredito.valor - this.total\n      })\n      \n      })\n\n    }\n    \n  }\n\n  cerrar() {\n    this.router.navigate(['/credito'], { relativeTo: this.rutaActiva });\n  }\n\n  imprimir(){\n\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef ,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { DialogMensaje } from 'src/app/model/dialogmensaje';\n\n@Component({\n  selector: 'app-dialogconfirm',\n  templateUrl: './dialogconfirm.component.html',\n  styleUrls: ['./dialogconfirm.component.css']\n})\nexport class DialogconfirmComponent implements OnInit {\n\n \n  constructor(\n    public dialogo: MatDialogRef<DialogconfirmComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogMensaje) { }\n\n    cerrar(): void {\n      this.dialogo.close(false);\n    }\n    aceptar(): void {\n      this.dialogo.close(true);\n    }\n  ngOnInit(): void {\n    \n  }\n}\n","<h1 mat-dialog-title>{{ data.titulo }}</h1>\n<div mat-dialog-content>\n  <p>{{ data.mensaje }}</p>\n</div>\n<div mat-dialog-actions align=\"end\">\n  <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">Cerrar</button>\n  <button mat-raised-button color=\"primary\" (click)=\"aceptar()\">Aceptar</button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef ,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { DialogMensaje } from 'src/app/model/dialogmensaje';\n\n@Component({\n  selector: 'app-dialogmensaje',\n  templateUrl: './dialogmensaje.component.html',\n  styleUrls: ['./dialogmensaje.component.css']\n})\nexport class DialogmensajeComponent implements OnInit {\n\n  constructor(\n    public dialogo: MatDialogRef<DialogmensajeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogMensaje) { }\n\n    cerrar(): void {\n      this.dialogo.close();\n    }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<h1 mat-dialog-title>{{ data.titulo }}</h1>\n<div mat-dialog-content>\n  <p>{{ data.mensaje }}</p>\n</div>\n<div mat-dialog-actions align=\"end\">\n  <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">Cerrar</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { JWToken } from 'src/app/model/jwtoken';\nimport { Usuario } from 'src/app/model/usuario';\nimport { StorageService } from 'src/app/service/storage.service';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  public usuario= new Usuario();\n\n  constructor(private router: Router, private service:WebServices,private storageService:StorageService,private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  ingresar(){\n\n    if(this.usuario.usuario != '' && this.usuario.password != '' ){\n      this.service.getLogin(this.usuario.usuario,this.usuario.password).subscribe(data=>{\n        console.log(data);\n        if(data != null){\n          let token =  JSON.stringify( data );\n          let loginSession = new JWToken();\n          loginSession  = JSON.parse(token);\n          this.correctLogin(loginSession);\n        }else{\n          this.snackBar.open('Usuario o Contraseña no correcta, verifique', '', {\n            duration: 4000,\n          });\n        }\n      })\n    }else{\n      this.snackBar.open('Usuario o Contraseña requerida', '', {\n        duration: 4000,\n      });\n    }\n  }\n\n  private correctLogin(data: JWToken){\n    this.storageService.setCurrentSession(data);\n    this.router.navigate(['/principal']);\n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>Login</mat-card-title>\n      <mat-card-subtitle>Ingrese su usuario y contraseña</mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n      <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n        <mat-label>Usuario</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          placeholder=\"Ingrese el usuario\"\n          [(ngModel)]=\"usuario.usuario\"\n          requiere\n        />\n        <mat-icon matSuffix>person</mat-icon>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n        <mat-label>Contraseña</mat-label>\n        <input\n          matInput\n          [type]=\"hide ? 'password' : 'text'\"\n          placeholder=\"Ingrese la contraseña\"\n          [(ngModel)]=\"usuario.password\"\n          require\n        />\n\n        <button\n          mat-icon-button\n          matSuffix\n          (click)=\"hide = !hide\"\n          [attr.aria-label]=\"'Hide password'\"\n          [attr.aria-pressed]=\"hide\"\n        >\n          <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n        </button>\n      </mat-form-field>\n    </mat-card-content>\n    <mat-card-actions>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"ingresar()\"\n        [style.width.%]=\"100\"\n      >\n        <span>INGRESAR</span>\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","<section>\n  <div class=\"example-label\"><h2>Movimiento Filtro</h2></div>\n  <div>\n    <mat-card class=\"example-card\">\n      <mat-card-content>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Seleccione Cliente</mat-label>\n          <mat-select [(ngModel)]=\"clienteId\">\n            <mat-option [value]=\"0\">Todos</mat-option>\n            <mat-option *ngFor=\"let c of _datosCliente\" [value]=\"c.id\">\n              {{ c.nombre + \" \" + c.apellido }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n          <span>Agregar</span>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n          <span>Buscar</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div>\n    <mat-card class=\"example-card\" *ngFor=\"let element of _datos\">\n      <mat-card-header>\n        <div *ngIf=\"setVisibleSalida(element)\">\n          <mat-card-title>{{\n            \"Cliente: \" +\n              element.cliente.nombre +\n              \" \" +\n              element.cliente.apellido\n          }}</mat-card-title>\n          <mat-card-subtitle>{{\n            \"DPI: \" + element.cliente.dpi\n          }}</mat-card-subtitle>\n        </div>\n        <div *ngIf=\"!setVisibleSalida(element)\">\n          <mat-card-title>{{\n            \"Proveedor: \" +\n              element.proveedor.nombre +\n              \" \" +\n              element.proveedor.apellido\n          }}</mat-card-title>\n          <mat-card-subtitle>{{\n            \"Empresa: \" + element.proveedor.empresa\n          }}</mat-card-subtitle>\n        </div>\n      </mat-card-header>\n      <mat-card-content class=\"mat-card-content-body\">\n        <table>\n          <tr>\n            <td>\n              <mat-label style=\"align-text: center\">Fecha:</mat-label>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <mat-label style=\"align-text: center\">{{\n                element.fecha | date: \"dd/MM/yyyy\"\n              }}</mat-label>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <mat-label style=\"align-text: center\"\n                >Tipo de Movimiento:</mat-label\n              >\n            </td>\n            <td>\n              <mat-label style=\"align-text: center\">{{\n                element.tipomovimiento.descripcion\n              }}</mat-label>\n            </td>\n          </tr>\n        </table>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button mat-raised-button color=\"primary\" (click)=\"detalle(element)\">\n          <mat-icon>list</mat-icon>\n          <span>Ver Detalle</span>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cliente } from 'src/app/model/cliente';\nimport { Movimiento } from 'src/app/model/movimiento';\nimport { WebServices } from 'src/app/service/web.service';\nimport { MovimientodetalleComponent } from './movimientodetalle/movimientodetalle.component';\n\n@Component({\n  selector: 'app-movimiento',\n  templateUrl: './movimiento.component.html',\n  styleUrls: ['./movimiento.component.css']\n})\nexport class MovimientoComponent implements OnInit {\n\n \n  public _datos:Movimiento[]= [];\n  clienteId:number=0;\n  public _datosCliente:Cliente[]= [];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private dialog: MatDialog,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.setFiltros();\n    this.buscar();\n  }\n\n\n  buscar(){\n    \n    if(this.clienteId == 0){\n      this.service.getMovimiento().subscribe(data => {\n        this._datos=data \n      });\n    }else{\n      this.service.getMovimientoClienteId(this.clienteId).subscribe(data => {\n        this._datos=data \n      });\n    }\n  \n  }\n\n  grabar(){\n    this.router.navigate(['./movimientotecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:Movimiento){\n    this.router.navigate(['./movimientotecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:Movimiento){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {      \n      this.service.deleteMovimiento(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n\n  detalle(data:Movimiento){\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = data;\n   \n    const dialogRef = this.dialog.open(MovimientodetalleComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(\n      (confirmDialog: boolean) => {\n        this.buscar();\n      }\n    );\n  }\n\n  setFiltros(){\n    this.service.getCliente().subscribe(data=>{\n      this._datosCliente = data;\n    })    \n  }\n\n  setVisibleSalida(data:Movimiento){\n    if(data.tipomovimiento.descripcion =='Salida'){\n      return true;\n    }\n    return false;\n  }\n\n}\n","<h1 mat-dialog-title>Movimiento Detalle</h1>\n<div mat-dialog-content>\n  <table id=\"customers\">\n    <tr>\n      <td class=\"th\">Producto</td>\n      <td class=\"th\">Cantidad</td>\n      <td class=\"th\">Valor</td>\n    </tr>\n    <tr *ngFor=\"let element of _datosDetalle\">\n      <td>\n        <mat-label style=\"align-text: center\">{{\n          element.articulo.descripcion\n        }}</mat-label>\n      </td>\n      <td>\n        <mat-label style=\"align-text: center\">{{ element.cantidad }}</mat-label>\n      </td>\n      <td>\n        <mat-label style=\"align-text: center\">{{\n          element.valor | currency: \"Q\"\n        }}</mat-label>\n      </td>\n    </tr>\n  </table>\n\n  <br />\n</div>\n<div mat-dialog-actions align=\"end\">\n  <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">Cerrar</button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef ,MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Movimiento } from 'src/app/model/movimiento';\nimport { MovimientoDetalle } from 'src/app/model/movimientodetalle';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-movimientodetalle',\n  templateUrl: './movimientodetalle.component.html',\n  styleUrls: ['./movimientodetalle.component.css']\n})\nexport class MovimientodetalleComponent implements OnInit {\n\n  public clsMovimiento:Movimiento;\n  public _datosDetalle:MovimientoDetalle[]= [];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private dialogRef: MatDialogRef<MovimientodetalleComponent>,@Inject(MAT_DIALOG_DATA) public data: Movimiento) {\n    this.clsMovimiento = data;\n   }\n\n\n  ngOnInit(): void {\n    this.obtenerDatos(this.clsMovimiento.id);  \n  }\n\n  cerrar() {\n    this.dialogRef.close(false);\n  }\n\n\n  obtenerDatos(id:number){\n    if(id>0){\n\n      this.service.getMovimientoDetalleMovimientoId(id).subscribe(data =>{\n        this._datosDetalle=data;    \n      })\n\n\n    }\n  }\n}\n","<mat-card class=\"example-card\">\n  <mat-card-title class=\"mat-card-content-body\"\n    >Movimiento Tecleo</mat-card-title\n  >\n  <mat-card-content class=\"mat-card-content-body\">\n    <table>\n      <tr>\n        <td>\n          <mat-form-field\n            class=\"example-form-field\"\n            appearance=\"outline\"\n            [style.width.%]=\"100\"\n          >\n            <mat-label>Fecha </mat-label>\n            <input\n              matInput\n              [matDatepicker]=\"pickerInicial\"\n              placeholder=\"Ingrese la fecha \"\n              [(ngModel)]=\"cls.fecha\"\n              requiere\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"pickerInicial\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #pickerInicial></mat-datepicker>\n          </mat-form-field>\n        </td>\n        <td>\n          <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n            <mat-label>Seleccione Tipo de Movimiento</mat-label>\n            <mat-select\n              [(ngModel)]=\"cls.tipomovimientoId\"\n              (selectionChange)=\"onChangeMovimiento()\"\n              required\n            >\n              <mat-option *ngFor=\"let c of _datosTipoMovimiento\" [value]=\"c.id\">\n                {{ c.descripcion }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </td>\n        <td>\n          <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n            <mat-label>Seleccione Tipo de Pago</mat-label>\n            <mat-select\n              [(ngModel)]=\"cls.tipopagoId\"\n              (selectionChange)=\"onChangeTipoPago()\"\n              required\n            >\n              <mat-option *ngFor=\"let c of _datosTipoPago\" [value]=\"c.id\">\n                {{ c.descripcion }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </td>\n      </tr>\n      <tr *ngIf=\"ventaCredito\">\n        <td>\n          <mat-form-field\n            class=\"example-form-field\"\n            appearance=\"outline\"\n            [style.width.%]=\"100\"\n          >\n            <mat-label>Fecha Final</mat-label>\n            <input\n              matInput\n              [matDatepicker]=\"pickerFinal\"\n              placeholder=\"Ingrese la fecha final\"\n              [(ngModel)]=\"clsCredito.fechafinal\"\n              requiere\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"pickerFinal\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #pickerFinal></mat-datepicker>\n          </mat-form-field>\n        </td>\n        <td>\n          <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n            <mat-label>Seleccione Tipo de Movimiento Credito</mat-label>\n            <mat-select\n              [(ngModel)]=\"clsCreditoDetalle.tipomovimientoId\"\n              required\n            >\n              <mat-option\n                *ngFor=\"let c of _datosTipoMovimientoCredito\"\n                [value]=\"c.id\"\n              >\n                {{ c.descripcion }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </td>\n        <td>\n          <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n            <mat-label>Seleccione Tipo de Credito</mat-label>\n            <mat-select [(ngModel)]=\"clsCredito.tipocreditoId\">\n              <mat-option>No Aplica</mat-option>\n              <mat-option *ngFor=\"let c of _datosTipoCredito\" [value]=\"c.id\">\n                {{ c.descripcion }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </td>\n      </tr>\n      <tr>\n        <td *ngIf=\"salida\">\n          <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n            <mat-label>Seleccione Cliente</mat-label>\n            <mat-select [(ngModel)]=\"cls.clienteId\">\n              <mat-option>No Aplica</mat-option>\n              <mat-option *ngFor=\"let c of _datosCliente\" [value]=\"c.id\">\n                {{ c.nombre + \" \" + c.apellido }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </td>\n        <td *ngIf=\"!salida\">\n          <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n            <mat-label>Seleccione Proveedor</mat-label>\n            <mat-select [(ngModel)]=\"cls.proveedorId\">\n              <mat-option>No Aplica</mat-option>\n              <mat-option *ngFor=\"let c of _datosProveedor\" [value]=\"c.id\">\n                {{ c.nombre + \" \" + c.apellido }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </td>\n      </tr>\n    </table>\n    <br />\n  </mat-card-content>\n  <mat-card-actions align=\"end\"> </mat-card-actions>\n</mat-card>\n\n<mat-card class=\"example-card\">\n  <mat-card-title class=\"mat-card-content-body\"\n    >Movimiento Detalle Tecleo</mat-card-title\n  >\n  <mat-card-content class=\"mat-card-content-body\">\n    <table>\n      <tr>\n        <td>\n          <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n            <mat-label>Seleccione Articulo</mat-label>\n            <mat-select\n              [(ngModel)]=\"clsDetalle.articuloId\"\n              (selectionChange)=\"onChangeArticulo()\"\n              required\n            >\n              <mat-option *ngFor=\"let c of _datosArticulo\" [value]=\"c.id\">\n                {{ c.descripcion }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </td>\n\n        <td>\n          <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n            <mat-label>Cantidad</mat-label>\n            <input\n              matInput\n              type=\"number\"\n              placeholder=\"Ingrese la cantidad deseada\"\n              [(ngModel)]=\"clsDetalle.cantidad\"\n              requiere\n            />\n          </mat-form-field>\n        </td>\n        <td>\n          <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n            <mat-label>Valor</mat-label>\n            <input\n              matInput\n              type=\"number\"\n              disabled\n              placeholder=\"Valor\"\n              data-decimal=\"2\"\n              [(ngModel)]=\"clsDetalle.valor\"\n              requiere\n            />\n          </mat-form-field>\n        </td>\n        <td>\n          <button\n            mat-icon-button\n            color=\"primary\"\n            aria-label=\"Example icon button with a home icon\"\n            (click)=\"addItem()\"\n          >\n            <mat-icon>add</mat-icon>\n          </button>\n        </td>\n      </tr>\n    </table>\n  </mat-card-content>\n  <br />\n  <mat-card-content class=\"mat-card-content-body\">\n    <table id=\"customers\">\n      <tr>\n        <td class=\"th\">Articulo</td>\n        <td class=\"th\">Cantidad</td>\n        <td class=\"th\">Valor</td>\n        <td class=\"th\">Eliminar</td>\n      </tr>\n      <tr *ngFor=\"let element of _datos\">\n        <td>\n          <mat-label style=\"align-text: center\">{{\n            element.articulo.descripcion\n          }}</mat-label>\n        </td>\n        <td>\n          <mat-label style=\"align-text: center\">{{\n            element.cantidad\n          }}</mat-label>\n        </td>\n        <td>\n          <mat-label style=\"align-text: center\">{{\n            element.valor | currency: \"Q\"\n          }}</mat-label>\n        </td>\n        <td>\n          <button\n            mat-icon-button\n            color=\"warn\"\n            aria-label=\"Example icon button with a home icon\"\n            (click)=\"deleteItem(element)\"\n          >\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </tr>\n    </table>\n    <br />\n  </mat-card-content>\n  <mat-card-actions align=\"end\">\n    <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n      <mat-icon>close</mat-icon>\n      <span>Cancelar</span>\n    </button>\n\n    <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n      <mat-icon>save</mat-icon>\n      <span>Grabar</span>\n    </button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Articulo } from 'src/app/model/articulo';\nimport { Cliente } from 'src/app/model/cliente';\nimport { Credito } from 'src/app/model/credito';\nimport { CreditoDetalle } from 'src/app/model/creditodetalle';\nimport { Movimiento } from 'src/app/model/movimiento';\nimport { MovimientoDetalle } from 'src/app/model/movimientodetalle';\nimport { Proveedor } from 'src/app/model/proveedor';\nimport { TipoCredito } from 'src/app/model/tipocredito';\nimport { TipoMovimiento } from 'src/app/model/tipomovimiento';\nimport { TipoPago } from 'src/app/model/tipopago';\nimport { Usuario } from 'src/app/model/usuario';\nimport { StorageService } from 'src/app/service/storage.service';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-movimientotecleo',\n  templateUrl: './movimientotecleo.component.html',\n  styleUrls: ['./movimientotecleo.component.css']\n})\nexport class MovimientotecleoComponent implements OnInit {\n\n\n  public cls:Movimiento=new Movimiento();\n  public clsDetalle:MovimientoDetalle = new MovimientoDetalle();\n\n  public clsCredito:Credito=new Credito();\n  public clsCreditoDetalle:CreditoDetalle = new CreditoDetalle();\n\n  public _datos: MovimientoDetalle []=[];\n  public _valorTotal:number = 0;\n\n  public _datosTipoMovimiento:TipoMovimiento[]= [];\n  public _datosTipoPago:TipoPago[]= [];\n  public _datosTipoMovimientoCredito:TipoMovimiento[]= [];\n\n  public _datosCliente:Cliente[]= [];\n  public _datosProveedor:Proveedor[]= [];\n  public _datosTipoCredito:TipoCredito[]= [];\n  public _datosArticulo:Articulo[]= [];\n\n  public _UsuarioCreacion:string=\"\";\n  public usuario:Usuario = new Usuario();\n\n\n  transferidos:number = 0;\n  public ventaCredito:boolean = false;\n  public salida:boolean=false;\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute,private storage: StorageService) { \n    \n    this.usuario = storage.getUserToken().data[0];\n    \n    this._UsuarioCreacion = this.usuario.nombre +\" \" + this.usuario.apellido\n    this.cls.usuarioId = this.usuario.id;\n  }\n\n  ngOnInit(): void {\n    this.setFiltros();\n    this.cls.fecha = new Date().toISOString();\n    this.cls.clienteId = 1\n    this.cls.proveedorId = 1\n    \n  }\n  cerrar() {\n    this.router.navigate(['/movimiento'], { relativeTo: this.rutaActiva });\n  }\n\n  addItem() {\n    this.clsDetalle.valor = this.clsDetalle.cantidad * this.clsDetalle.articulo.valorventa;\n    this._datos.push(this.clsDetalle);\n    this._valorTotal += this.clsDetalle.valor;\n  }\n\n\n\n  deleteItem(data:MovimientoDetalle) {\n    let index: number = this._datos.findIndex(c=> c == data);\n    this._valorTotal  -= this._datos[index].valor;\n    this._datos.splice(index,1);\n  }\n\n  grabar(){\n      if(this.validarCampos()){\n        this.service.postMovimiento(this.cls).subscribe(data=>{\n          console.log(data);\n            this._datos.forEach(c=>{\n              c.movimientoId = data.id;\n              this.service.postMovimientoDetalle(c).subscribe(data=>{\n                this.transferidos +=1;\n                if(this._datos.length >= this.transferidos){\n                  if(this.ventaCredito){\n                    this.clsCredito.clienteId = this.cls.clienteId\n                    this.clsCredito.fechainicial = this.cls.fecha\n                    this.clsCredito.descripcion =\"Compra al credito Movimiento referencia: \" + data.id\n                    this.clsCredito.valor = this._valorTotal\n                    console.log(this.clsCredito)\n                    this.service.postCredito(this.clsCredito).subscribe(data =>{\n                      this.clsCreditoDetalle.fecha = this.clsCredito.fechainicial\n                      this.clsCreditoDetalle.creditoId = data.id\n                      this.clsCreditoDetalle.valor = this._valorTotal\n                      console.log(this.clsCreditoDetalle)\n                      this.service.postCreditoDetalle(this.clsCreditoDetalle).subscribe(detalle =>{\n                        this.snackBar.open('Registro grabado', '', {\n                          duration: 4000,\n                        });\n                        this.cerrar();\n            \n                      })\n                    })\n  \n                  }else{\n                    this.snackBar.open('Registro creada correctamente', 'Aceptar', {\n                      duration: 2000,\n                    });\n                    this.cerrar();\n                  }\n                 \n                 \n                }\n              })\n            })\n        })\n      }\n  }\n\n\n  validarCampos(){\n    if(this.cls.tipomovimientoId == 0){\n      this.snackBar.open('El Campo Tipo Movimiento es requerido', '', {\n        duration: 4000,\n      });  \n      return false;    \n    }\n    if(this.cls.tipopagoId == 0){\n      this.snackBar.open('El Campo Tipo Pago es requerido', '', {\n        duration: 4000,\n      });  \n      return false;    \n    }\n    return true;\n  }\n\n\n\n  onChangeArticulo(){\n    this.service.getArticuloId(this.clsDetalle.articuloId).subscribe(data => {\n      this.clsDetalle.articulo = data;\n      this.clsDetalle.valor = data.valorventa;\n    })\n  }\n\n  onChangeTipoPago(){\n    this.service.getTipoPagoId(this.cls.tipopagoId).subscribe(data => {\n      if(data.descripcion ==\"Credito\"){\n        this.ventaCredito = true;\n      }else{\n        this.ventaCredito = false;\n      }\n    })\n  }\n\n  onChangeMovimiento(){\n    this.service.getTipoMovimientoId(this.cls.tipomovimientoId).subscribe(data => {\n      if(data.descripcion ==\"Salida\"){\n        this.salida= true;\n      }else{\n        this.salida= false;\n      }\n    })\n  }\n\n  setFiltros(){\n    this.service.getArticulo().subscribe(data => {\n      this._datosArticulo = data;\n    })\n    this.service.getCliente().subscribe(data=>{\n      this._datosCliente = data;\n    })\n    this.service.getProveedor().subscribe(data=>{\n      this._datosProveedor = data;\n    })\n    this.service.getTipoCredito().subscribe(data=>{\n      this._datosTipoCredito = data;\n    })\n    \n   this.service.getTipoPago().subscribe(data=>{\n     this._datosTipoPago = data;\n   })\n\n    this.service.getTipoMovimientoMovimiento().subscribe(data=>{\n      this._datosTipoMovimiento = data;\n    })\n    this.service.getTipoMovimientoCredito().subscribe(data=>{\n      this._datosTipoMovimientoCredito = data;\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogMensaje } from 'src/app/model/dialogmensaje';\nimport { DialogmensajeComponent } from '../dialogos/dialogmensaje/dialogmensaje.component';\n\n@Component({\n  selector: 'app-principal',\n  templateUrl: './principal.component.html',\n  styleUrls: ['./principal.component.css']\n})\nexport class PrincipalComponent implements OnInit {\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n\n  about() {\n\n    let mensaje: DialogMensaje={titulo: \"Informacion\",mensaje:\"Este prototipo fue creado por Edwin Alexander Menèndez Castillo con carnet 0394-07-4387 y telefono 3648-8304.\"}\n\n    this.dialog\n    .open(DialogmensajeComponent, {\n      data: mensaje\n    })\n    .afterClosed()\n    .subscribe();\n\n  }\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-header align=\"center\">\n      <!--<div mat-card-avatar class=\"example-header-image\"></div>-->\n      <mat-card-title>MULTISERVICIOS S.A.</mat-card-title>\n      <mat-card-subtitle></mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"../../../assets/principal.png\" alt=\"\" />\n    <mat-card-content>\n      <p></p>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n      <button mat-raised-button color=\"primary\" (click)=\"about()\">\n        Contactanos\n      </button>\n    </mat-card-actions>\n    <mat-card-footer>\n      <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </mat-card-footer>\n  </mat-card>\n</div>\n","<section>\n  <div class=\"example-label\"><h2>Proveedor Filtro</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n          <span>Agregar</span>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n          <span>Buscar</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div>\n    <mat-card class=\"example-card\" *ngFor=\"let element of _datos\">\n      <mat-card-header>\n        <mat-card-title>{{\n          \"Proveedor: \" + element.nombre + element.apellido\n        }}</mat-card-title>\n        <mat-card-subtitle>{{ \"DPI: \" + element.dpi }}</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <div>\n          <table>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">NIT:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.nit\n                }}</mat-label>\n              </td>\n            </tr>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Telefono:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.telefono\n                }}</mat-label>\n              </td>\n            </tr>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Email:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.correo\n                }}</mat-label>\n              </td>\n            </tr>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Direccion:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.direccion\n                }}</mat-label>\n              </td>\n            </tr>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Empresa:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.empresa\n                }}</mat-label>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n          <mat-icon>mode_edit</mat-icon>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Proveedor } from 'src/app/model/proveedor';\nimport { StorageService } from 'src/app/service/storage.service';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-proveedor',\n  templateUrl: './proveedor.component.html',\n  styleUrls: ['./proveedor.component.css']\n})\nexport class ProveedorComponent implements OnInit {\n  public _datos:Proveedor[]= [];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute,public storageService: StorageService) {\n    if(storageService.getUserToken().data[0].tipousuario.descripcion != \"Administrador\"){\n      alert(\"Usuario sin accesos\");\n      this.router.navigate(['/principal']);\n    }\n   }\n\n  ngOnInit(): void {\n    this.buscar();\n  }\n\n\n  buscar(){\n\n      this.service.getProveedor().subscribe(data => {\n        this._datos=data \n      });\n\n  }\n\n  grabar(){\n    this.router.navigate(['./proveedortecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:Proveedor){\n    this.router.navigate(['./proveedortecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:Proveedor){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteProveedor(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Proveedor } from 'src/app/model/proveedor';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-proveedortecleo',\n  templateUrl: './proveedortecleo.component.html',\n  styleUrls: ['./proveedortecleo.component.css']\n})\nexport class ProveedortecleoComponent implements OnInit {\n\n  public cls:Proveedor=new Proveedor();\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);  \n  }\n\n  cerrar() {\n    this.router.navigate(['/proveedor'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.cls.nombre == \"\"){\n      this.snackBar.open('El Campo nombre es requerido', '', {\n        duration: 4000,\n      });      \n    }else if (this.cls.dpi == \"\"){\n      this.snackBar.open('El Campo dpi es requerido', '', {\n        duration: 4000,\n      });\n    }else if (this.cls.nit == \"\"){\n      this.snackBar.open('El Campo nit es requerido', '', {\n        duration: 4000,\n      });\n    }\n    else if (this.cls.telefono == \"\"){\n      this.snackBar.open('El Campo telefono es requerido', '', {\n        duration: 4000,\n      });\n    }else{\n      if(this.cls.id ==0){\n        this.service.postProveedor(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro grabado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }else{\n        this.service.putProveedor(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro modificado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getProveedorId(id).subscribe(data =>{\n        this.cls=data;      \n      })\n    }\n    \n  }\n\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Proveedor Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de proveedores</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Nombre</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese su Nombre\"\n            [(ngModel)]=\"cls.nombre\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Apellido</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese su Apellido\"\n            [(ngModel)]=\"cls.apellido\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>DPI</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            placeholder=\"Ingrese el DPI\"\n            [(ngModel)]=\"cls.dpi\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>NIT</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            placeholder=\"Ingrese el NIT\"\n            [(ngModel)]=\"cls.nit\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Telefono</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            placeholder=\"Ingrese su Telefono\"\n            [(ngModel)]=\"cls.telefono\"\n            requiere\n          />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Direccion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese su Direccion\"\n            [(ngModel)]=\"cls.direccion\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Correo Electronico</mat-label>\n          <input\n            matInput\n            type=\"email\"\n            placeholder=\"Ingrese su Correo Electronico\"\n            [(ngModel)]=\"cls.correo\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Empresa</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese la Empresa donde trabaja\"\n            [(ngModel)]=\"cls.empresa\"\n            requiere\n          />\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","<section>\n  <div class=\"example-label\"><h2>Tipo Cliente Filtro</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n          <span>Agregar</span>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n          <span>Buscar</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div>\n    <mat-card class=\"example-card\" *ngFor=\"let element of _datos\">\n      <mat-card-header>\n        <mat-card-title>{{\n          \"Descripcion: \" + element.descripcion\n        }}</mat-card-title>\n        <mat-card-subtitle></mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <div>\n          <table>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Interes:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.interes\n                }}</mat-label>\n              </td>\n            </tr>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Clasificacion:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.clasificacion\n                }}</mat-label>\n              </td>\n            </tr>\n            <tr>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">Monto:</mat-label>\n              </td>\n              <td [style.width.%]=\"60\">\n                <mat-label style=\"align-text: center\">{{\n                  element.monto\n                }}</mat-label>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n          <mat-icon>mode_edit</mat-icon>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TipoCliente } from 'src/app/model/tipocliente';\nimport { StorageService } from 'src/app/service/storage.service';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-tipocliente',\n  templateUrl: './tipocliente.component.html',\n  styleUrls: ['./tipocliente.component.css']\n})\nexport class TipoclienteComponent implements OnInit {\n\n  public _datos:TipoCliente[]= [];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute,public storageService: StorageService) { \n    if(storageService.getUserToken().data[0].tipousuario.descripcion != \"Administrador\"){\n      alert(\"Usuario sin accesos\");\n      this.router.navigate(['/principal']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.buscar();\n  }\n\n\n  buscar(){\n\n      this.service.getTipoCliente().subscribe(data => {\n        this._datos=data \n      });\n\n  }\n\n  grabar(){\n    this.router.navigate(['./tipoclientetecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:TipoCliente){\n    this.router.navigate(['./tipoclientetecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:TipoCliente){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteTipoCliente(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TipoCliente } from 'src/app/model/tipocliente';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-tipoclientetecleo',\n  templateUrl: './tipoclientetecleo.component.html',\n  styleUrls: ['./tipoclientetecleo.component.css']\n})\nexport class TipoclientetecleoComponent implements OnInit {\n\n\n  public cls:TipoCliente=new TipoCliente();\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);  \n  }\n\n  cerrar() {\n    this.router.navigate(['/tipocliente'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.cls.clasificacion == \"\"){\n      this.snackBar.open('El Campo Clasificacion es requerido', '', {\n        duration: 4000,\n      });      \n    }else if (this.cls.monto == 0){\n      this.snackBar.open('El Campo Monto es requerido', '', {\n        duration: 4000,\n      });\n    }else if (this.cls.interes == 0){\n      this.snackBar.open('El Campo Interes es requerido', '', {\n        duration: 4000,\n      });\n    }\n    else{\n      if(this.cls.id ==0){\n        this.service.postTipoCliente(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro grabado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }else{\n        this.service.putTipoCliente(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro modificado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getTipoClienteId(id).subscribe(data =>{\n        this.cls=data;      \n      })\n    }\n    \n  }\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Tipo Cliente Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de tipos de cliente</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Descripcion</mat-label>\n          <textarea\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese su descripcion\"\n            [(ngModel)]=\"cls.descripcion\"\n            requiere\n            rows=\"3\"\n          ></textarea>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Clasificacion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese la clasificacion\"\n            [(ngModel)]=\"cls.clasificacion\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Interes</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            data-decimal=\"2\"\n            placeholder=\"Ingrese el Interes\"\n            [(ngModel)]=\"cls.interes\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Monto</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            data-decimal=\"2\"\n            placeholder=\"Ingrese el Monto\"\n            [(ngModel)]=\"cls.monto\"\n            requiere\n          />\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","<section>\n  <div class=\"example-label\"><h2>Tipo Credito Filtro</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n          <span>Agregar</span>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n          <span>Buscar</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div>\n    <mat-card class=\"example-card\" *ngFor=\"let element of _datos\">\n      <mat-card-header>\n        <mat-card-title>{{\n          \"Descripcion: \" + element.descripcion\n        }}</mat-card-title>\n        <mat-card-subtitle></mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <div></div>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n          <mat-icon>mode_edit</mat-icon>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TipoCredito } from 'src/app/model/tipocredito';\nimport { StorageService } from 'src/app/service/storage.service';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-tipocredito',\n  templateUrl: './tipocredito.component.html',\n  styleUrls: ['./tipocredito.component.css']\n})\nexport class TipocreditoComponent implements OnInit {\n\n \n  public _datos:TipoCredito[]= [];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute,public storageService: StorageService) { \n\n    if(storageService.getUserToken().data[0].tipousuario.descripcion != \"Administrador\"){\n      alert(\"Usuario sin accesos\");\n      this.router.navigate(['/principal']);\n    } }\n\n  ngOnInit(): void {\n    this.buscar();\n  }\n\n\n  buscar(){\n\n      this.service.getTipoCredito().subscribe(data => {\n        this._datos=data \n      });\n\n  }\n\n  grabar(){\n    this.router.navigate(['./tipocreditotecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:TipoCredito){\n    this.router.navigate(['./tipocreditotecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:TipoCredito){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteTipoCredito(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TipoCredito } from 'src/app/model/tipocredito';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-tipocreditotecleo',\n  templateUrl: './tipocreditotecleo.component.html',\n  styleUrls: ['./tipocreditotecleo.component.css']\n})\nexport class TipocreditotecleoComponent implements OnInit {\n\n\n  public cls:TipoCredito=new TipoCredito();\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);  \n  }\n\n  cerrar() {\n    this.router.navigate(['/tipocredito'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.cls.descripcion == \"\"){\n      this.snackBar.open('El Campo Descripcion es requerido', '', {\n        duration: 4000,\n      });      \n    }\n    else{\n      if(this.cls.id ==0){\n        this.service.postTipoCredito(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro grabado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }else{\n        this.service.putTipoCredito(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro modificado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getTipoCreditoId(id).subscribe(data =>{\n        this.cls=data;      \n      })\n    }\n    \n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Tipo Credito Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de tipos de credito</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Descripcion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese la descripcion\"\n            [(ngModel)]=\"cls.descripcion\"\n            requiere\n          />\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","<section>\n  <div class=\"example-label\"><h2>Tipo Movimiento Filtro</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n          <span>Agregar</span>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n          <span>Buscar</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div>\n    <mat-card class=\"example-card\" *ngFor=\"let element of _datos\">\n      <mat-card-header>\n        <mat-card-title>{{\n          \"Descripcion: \" + element.descripcion\n        }}</mat-card-title>\n\n        <mat-card-subtitle></mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <div>\n          <table>\n            <tr>\n              <td [style.width.%]=\"100\">\n                <mat-label style=\"align-text: center\"\n                  >Movimiento de Credito:</mat-label\n                >\n              </td>\n              <td [style.width.%]=\"40\">\n                <mat-label style=\"align-text: center\">{{\n                  element.credito ? \"SI\" : \"NO\"\n                }}</mat-label>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n          <mat-icon>mode_edit</mat-icon>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TipoMovimiento } from 'src/app/model/tipomovimiento';\nimport { StorageService } from 'src/app/service/storage.service';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-tipomovimiento',\n  templateUrl: './tipomovimiento.component.html',\n  styleUrls: ['./tipomovimiento.component.css']\n})\nexport class TipomovimientoComponent implements OnInit {\n\n  public _datos:TipoMovimiento[]= [];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute,public storageService: StorageService) { \n\n    if(storageService.getUserToken().data[0].tipousuario.descripcion != \"Administrador\"){\n      alert(\"Usuario sin accesos\");\n      this.router.navigate(['/principal']);\n    }}\n\n  ngOnInit(): void {\n    this.buscar();\n  }\n\n\n  buscar(){\n\n      this.service.getTipoMovimiento().subscribe(data => {\n        this._datos=data \n      });\n\n  }\n\n  grabar(){\n    this.router.navigate(['./tipomovimientotecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:TipoMovimiento){\n    this.router.navigate(['./tipomovimientotecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:TipoMovimiento){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteTipoMovimiento(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TipoMovimiento } from 'src/app/model/tipomovimiento';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-tipomovimientotecleo',\n  templateUrl: './tipomovimientotecleo.component.html',\n  styleUrls: ['./tipomovimientotecleo.component.css']\n})\nexport class TipomovimientotecleoComponent implements OnInit {\n\n  public chkVenta:boolean=true;\n  public cls:TipoMovimiento=new TipoMovimiento();\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);  \n  }\n\n  cerrar() {\n    this.router.navigate(['/tipomovimiento'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.cls.descripcion == \"\"){\n      this.snackBar.open('El Campo Descripcion es requerido', '', {\n        duration: 4000,\n      });      \n    }\n    else{\n      if(this.chkVenta){\n        this.cls.signo = \"-1\"\n      }else{\n        this.cls.signo = \"1\"\n      }\n      if(this.cls.id ==0){\n        this.service.postTipoMovimiento(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro grabado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }else{\n        this.service.putTipoMovimiento(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro modificado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getTipoMovimientoId(id).subscribe(data =>{\n        this.cls=data;      \n      })\n    }\n    \n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Tipo Movimiento Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de tipos de movimiento</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Descripcion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese la descripcion\"\n            [(ngModel)]=\"cls.descripcion\"\n            requiere\n          />\n        </mat-form-field>\n\n        <section class=\"example-section\">\n          <mat-checkbox class=\"example-margin\" [(ngModel)]=\"chkVenta\"\n            >Tipo de movimiento venta?</mat-checkbox\n          >\n        </section>\n\n        <section class=\"example-section\">\n          <mat-checkbox class=\"example-margin\" [(ngModel)]=\"cls.credito\"\n            >Tipo de movimiento para credito?</mat-checkbox\n          >\n        </section>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","<section>\n  <div class=\"example-label\"><h2>Tipo Pago Filtro</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n          <span>Agregar</span>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n          <span>Buscar</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div>\n    <mat-card class=\"example-card\" *ngFor=\"let element of _datos\">\n      <mat-card-header>\n        <mat-card-title>{{\n          \"Descripcion: \" + element.descripcion\n        }}</mat-card-title>\n        <mat-card-subtitle></mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <div></div>\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n          <mat-icon>mode_edit</mat-icon>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TipoPago } from 'src/app/model/tipopago';\nimport { StorageService } from 'src/app/service/storage.service';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-tipopago',\n  templateUrl: './tipopago.component.html',\n  styleUrls: ['./tipopago.component.css']\n})\nexport class TipopagoComponent implements OnInit {\n\n\n  public _datos:TipoPago[]= [];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute,public storageService: StorageService) { \n\n    if(storageService.getUserToken().data[0].tipousuario.descripcion != \"Administrador\"){\n      alert(\"Usuario sin accesos\");\n      this.router.navigate(['/principal']);\n    }}\n\n  ngOnInit(): void {\n    this.buscar();\n  }\n\n\n  buscar(){\n\n      this.service.getTipoPago().subscribe(data => {\n        this._datos=data \n      });\n\n  }\n\n  grabar(){\n    this.router.navigate(['./tipopagotecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:TipoPago){\n    this.router.navigate(['./tipopagotecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:TipoPago){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteTipoPago(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TipoPago } from 'src/app/model/tipopago';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-tipopagotecleo',\n  templateUrl: './tipopagotecleo.component.html',\n  styleUrls: ['./tipopagotecleo.component.css']\n})\nexport class TipopagotecleoComponent implements OnInit {\n\n \n  public cls:TipoPago=new TipoPago();\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);  \n  }\n\n  cerrar() {\n    this.router.navigate(['/tipopago'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.cls.descripcion == \"\"){\n      this.snackBar.open('El Campo Descripcion es requerido', '', {\n        duration: 4000,\n      });      \n    }\n    else{\n      if(this.cls.id ==0){\n        this.service.postTipoPago(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro grabado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }else{\n        this.service.putTipoPago(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro modificado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getTipoPagoId(id).subscribe(data =>{\n        this.cls=data;      \n      })\n    }\n    \n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Tipo Pago Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de tipos de pagos</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Descripcion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese la descripcion\"\n            [(ngModel)]=\"cls.descripcion\"\n            requiere\n          />\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","<section>\n  <div class=\"example-label\"><h2>Usuario Filtro</h2></div>\n  <div class=\"example-button-row\">\n    <div class=\"example-flex-container\">\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n          <mat-icon>add</mat-icon>\n          <span>Agregar</span>\n        </button>\n      </div>\n      <div class=\"example-button-container\">\n        <button mat-raised-button color=\"primary\" (click)=\"buscar()\">\n          <mat-icon>search</mat-icon>\n          <span>Buscar</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div>\n    <mat-card class=\"example-card\" *ngFor=\"let element of _datos\">\n      <mat-card-header>\n        <mat-card-title>{{\n          \"Nombre: \" + element.nombre + \" \" + element.apellido\n        }}</mat-card-title>\n        <mat-card-subtitle\n          >{{ \"Usuario: \" + element.usuario }}\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <table>\n          <tr>\n            <td class=\"th\">Telefono</td>\n            <td class=\"th\">Direccion</td>\n            <td class=\"th\">Tipo Usuario</td>\n          </tr>\n          <tr>\n            <td>\n              <mat-label style=\"align-text: center\">{{\n                element.telefono\n              }}</mat-label>\n            </td>\n            <td>\n              <mat-label style=\"align-text: center\">{{\n                element.direccion\n              }}</mat-label>\n            </td>\n            <td>\n              <mat-label style=\"align-text: center\">{{\n                element.tipousuario.descripcion\n              }}</mat-label>\n            </td>\n          </tr>\n        </table>\n\n        <br />\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button mat-icon-button color=\"warn\" (click)=\"eliminar(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" (click)=\"modificar(element)\">\n          <mat-icon>mode_edit</mat-icon>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Usuario } from 'src/app/model/usuario';\nimport { StorageService } from 'src/app/service/storage.service';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  public _datos:Usuario[]= [];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute,public storageService: StorageService) { \n\n    if(storageService.getUserToken().data[0].tipousuario.descripcion != \"Administrador\"){\n      alert(\"Usuario sin accesos\");\n      this.router.navigate(['/principal']);\n    }}\n\n  ngOnInit(): void {\n    this.buscar();\n  }\n\n  buscar(){\n\n      this.service.getUsuarios().subscribe(data => {\n        this._datos=data \n      });\n\n  }\n\n  grabar(){\n    this.router.navigate(['./usuariotecleo',0], { relativeTo: this.rutaActiva });\n  }\n\n  modificar(data:Usuario){\n    this.router.navigate(['./usuariotecleo',data.id], { relativeTo: this.rutaActiva });\n  }\n\n  eliminar(data:Usuario){\n    const respuesta = confirm(\"¿Esta seguro que desea eliminar el registro?. Ya no podra recuperarlo.\");\n    if (respuesta) {\n      \n      this.service.deleteUsuario(data).subscribe(()=>{\n        this.buscar()\n      })\n    }\n  }\n\n}\n","<div class=\"main-div\">\n  <mat-card class=\"example-card\">\n    <mat-card-title>Usuario Tecleo</mat-card-title>\n    <mat-card-subtitle>ingreso de usuarios</mat-card-subtitle>\n    <mat-card-content>\n      <div>\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Nombre</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese su Nombre\"\n            [(ngModel)]=\"cls.nombre\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Apellido</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese su Apellido\"\n            [(ngModel)]=\"cls.apellido\"\n            requiere\n          />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Usuario</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese su Usuario\"\n            [(ngModel)]=\"cls.usuario\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Contraseña</mat-label>\n          <input\n            matInput\n            [type]=\"hide ? 'password' : 'text'\"\n            placeholder=\"Ingrese la contraseña\"\n            [(ngModel)]=\"cls.password\"\n            require\n          />\n\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n          </button>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Telefono</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            placeholder=\"Ingrese su Telefono\"\n            [(ngModel)]=\"cls.telefono\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Direccion</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"Ingrese su Direccion\"\n            [(ngModel)]=\"cls.direccion\"\n            requiere\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" [style.width.%]=\"100\">\n          <mat-label>Seleccione Tipo de Usuario</mat-label>\n          <mat-select [(ngModel)]=\"cls.tipousuarioId\" required>\n            <mat-option *ngFor=\"let c of _datosTipoUsuario\" [value]=\"c.id\">\n              {{ c.descripcion }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"warn\" (click)=\"cerrar()\">\n        Cancelar\n      </button>\n      <button mat-raised-button color=\"primary\" (click)=\"grabar()\">\n        Grabar\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TipoUsuario } from 'src/app/model/tipousuario';\nimport { Usuario } from 'src/app/model/usuario';\nimport { WebServices } from 'src/app/service/web.service';\n\n@Component({\n  selector: 'app-usuariotecleo',\n  templateUrl: './usuariotecleo.component.html',\n  styleUrls: ['./usuariotecleo.component.css']\n})\nexport class UsuariotecleoComponent implements OnInit {\n\n  \n  public cls:Usuario=new Usuario();\n  hide = true;\n  public _datosTipoUsuario:TipoUsuario[]=[];\n\n  constructor(private service:WebServices,private snackBar: MatSnackBar,private router: Router,public rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.setFiltros();\n    this.obtenerDatos(this.rutaActiva.snapshot.params.Id);  \n  }\n\n  cerrar() {\n    this.router.navigate(['/usuario'], { relativeTo: this.rutaActiva });\n  }\n\n  grabar(){\n\n    if(this.cls.nombre == \"\"){\n      this.snackBar.open('El Campo nombre es requerido', '', {\n        duration: 4000,\n      });      \n    }\n   else if(this.cls.usuario == \"\"){\n      this.snackBar.open('El Campo Usuario es requerido', '', {\n        duration: 4000,\n      });      \n    }\n    else if(this.cls.password == \"\"){\n      this.snackBar.open('El Campo Passowrd es requerido', '', {\n        duration: 4000,\n      });      \n    }\n    else{\n      if(this.cls.id ==0){\n        this.service.postUsuario(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro grabado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }else{\n        this.service.putUsuario(this.cls).subscribe(data =>{\n          this.snackBar.open('Registro modificado', '', {\n            duration: 4000,\n          });\n          this.cerrar();\n        })\n      }\n    }\n    \n  }\n\n  obtenerDatos(id:number){\n    if(id>0){\n      this.service.getUsuarioId(id).subscribe(data =>{\n        this.cls=data;      \n      })\n    }\n    \n  }\n\n  setFiltros(){\n    this.service.getTipoUsuario().subscribe(data=>{\n      this._datosTipoUsuario = data;\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}